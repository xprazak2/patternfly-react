webpackJsonp([0xb4c7d6e2ba57,0xca0fbebf7550,0xcd51a54784e6,60332197092847,0xc319a11f16c6,0xcdc6ebbebf89,29149193096408,0x649f06488a0d],{814:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var o=n(215),r=a(o),l=n(216),i=a(l),s=n(217),p=a(s),d=n(218),c=a(d),g=n(220),m=a(g),u=n(221),b=a(u),f=n(219),v=a(f);t.default={title:"Page Layout Demos",examples:[r.default,i.default,p.default,c.default,m.default,b.default,v.default],fullPageOnly:!0},e.exports=t.default},215:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(2),s=a(i),p=n(4),d=n(7),c=n(18),g=a(c),m=n(17),u=a(m),b=n(5),f=n(16),v=n(9),I=a(v),w=n(8),S=a(w),D=function(e){function t(n){o(this,t);var a=r(this,e.call(this,n));a.onDropdownToggle=function(e){a.setState({isDropdownOpen:e})},a.onDropdownSelect=function(e){a.setState({isDropdownOpen:!a.state.isDropdownOpen})},a.onKebabDropdownToggle=function(e){a.setState({isKebabDropdownOpen:e})},a.onKebabDropdownSelect=function(e){a.setState({isKebabDropdownOpen:!a.state.isKebabDropdownOpen})},a.onNavSelect=function(e){a.setState({activeItem:e.itemId})},a.onNavToggle=function(){a.setState({isNavOpen:!a.state.isNavOpen})};var l="undefined"!=typeof window&&window.innerWidth>=parseInt(d.global_breakpoint_md.value,10);return a.state={isDropdownOpen:!1,isKebabDropdownOpen:!1,activeItem:0,isNavOpen:l},a}return l(t,e),t.prototype.render=function(){var e,t=this.state,n=t.isDropdownOpen,a=t.isKebabDropdownOpen,o=t.activeItem,r=t.isNavOpen,l=s.default.createElement(p.Nav,{onSelect:this.onNavSelect,"aria-label":"Nav"},s.default.createElement(p.NavList,null,s.default.createElement(p.NavItem,{to:"#nav-link1",itemId:0,isActive:0===o},"System Panel"),s.default.createElement(p.NavItem,{to:"#nav-link2",itemId:1,isActive:1===o},"Policy"),s.default.createElement(p.NavItem,{to:"#nav-link3",itemId:2,isActive:2===o},"Authentication"),s.default.createElement(p.NavItem,{to:"#nav-link4",itemId:3,isActive:3===o},"Network Services"),s.default.createElement(p.NavItem,{to:"#nav-link5",itemId:4,isActive:4===o},"Server"))),i=s.default.createElement(p.Toolbar,null,s.default.createElement(p.ToolbarGroup,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnLg)},s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.BellIcon,null))),s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.CogIcon,null)))),s.default.createElement(p.ToolbarGroup,null,s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.hiddenOnLg,u.default.mr_0)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onKebabDropdownSelect,toggle:s.default.createElement(p.KebabToggle,{onToggle:this.onKebabDropdownToggle}),isOpen:a},s.default.createElement(p.DropdownItem,null,s.default.createElement(f.BellIcon,null)," Notifications"),s.default.createElement(p.DropdownItem,null,s.default.createElement(f.CogIcon,null)," Settings"))),s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnMd)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onDropdownSelect,isOpen:n,toggle:s.default.createElement(p.DropdownToggle,{onToggle:this.onDropdownToggle},"Kyle Baker")},s.default.createElement(p.DropdownItem,null,"Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Action"),s.default.createElement(p.DropdownItem,{isDisabled:!0},"Disabled Link"),s.default.createElement(p.DropdownItem,{isDisabled:!0,component:"button"},"Disabled Action"),s.default.createElement(p.DropdownSeparator,null),s.default.createElement(p.DropdownItem,null,"Separated Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Separated Action"))))),d=(e={},e[p.BackgroundImageSrc.lg]="/assets/images/pfbg_1200.jpg",e[p.BackgroundImageSrc.md]="/assets/images/pfbg_992.jpg",e[p.BackgroundImageSrc.md2x]="/assets/images/pfbg_992@2x.jpg",e[p.BackgroundImageSrc.sm]="/assets/images/pfbg_768.jpg",e[p.BackgroundImageSrc.sm2x]="/assets/images/pfbg_768@2x.jpg",e[p.BackgroundImageSrc.xl]="/assets/images/pfbg_2000.jpg",e[p.BackgroundImageSrc.xs]="/assets/images/pfbg_576.jpg",e[p.BackgroundImageSrc.xs2x]="/assets/images/pfbg_576@2x.jpg",e[p.BackgroundImageSrc.filter]="/assets/images/background-filter.svg",e),c=s.default.createElement(p.PageHeader,{logo:s.default.createElement(p.Brand,{src:I.default,alt:"Patternfly Logo"}),toolbar:i,avatar:s.default.createElement(p.Avatar,{src:S.default,alt:"Avatar image"}),showNavToggle:!0,onNavToggle:this.onNavToggle}),m=s.default.createElement(p.PageSidebar,{nav:l,isNavOpen:r});return s.default.createElement(s.default.Fragment,null,s.default.createElement(p.BackgroundImage,{src:d}),s.default.createElement(p.Page,{header:c,sidebar:m},s.default.createElement(p.PageSection,{variant:p.PageSectionVariants.light},s.default.createElement(p.TextContent,null,s.default.createElement(p.Text,{component:"h1"},"Main Title"),s.default.createElement(p.Text,{component:"p"},"Body text should be Overpass Regular at 16px. It should have leading of 24px because ",s.default.createElement("br",null),"of itâ€™s relative line height of 1.5."))),s.default.createElement(p.PageSection,null,s.default.createElement(p.Gallery,{gutter:"md"},Array.apply(0,Array(10)).map(function(e,t){return s.default.createElement(p.GalleryItem,{key:t},s.default.createElement(p.Card,null,s.default.createElement(p.CardBody,null,"This is a card")))})))))},t}(s.default.Component);D.title="Using default navigation",t.default=D,D.__docgenInfo={description:"",displayName:"PageLayoutDefaultNav"},e.exports=t.default},660:function(e,t){e.exports="import React from 'react';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport brandImg from './l_pf-reverse-164x11.png';\nimport avatarImg from './img_avatar.png';\n\nclass PageLayoutDefaultNav extends React.Component {\n  static title = 'Using default navigation';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 0,\n      isNavOpen\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList>\n          <NavItem to=\"#nav-link1\" itemId={0} isActive={activeItem === 0}>\n            System Panel\n          </NavItem>\n          <NavItem to=\"#nav-link2\" itemId={1} isActive={activeItem === 1}>\n            Policy\n          </NavItem>\n          <NavItem to=\"#nav-link3\" itemId={2} isActive={activeItem === 2}>\n            Authentication\n          </NavItem>\n          <NavItem to=\"#nav-link4\" itemId={3} isActive={activeItem === 3}>\n            Network Services\n          </NavItem>\n          <NavItem to=\"#nav-link5\" itemId={4} isActive={activeItem === 4}>\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component=\"button\">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component=\"button\">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component=\"button\">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt=\"Avatar image\" />}\n        showNavToggle\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} sidebar={Sidebar}>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of itâ€™s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutDefaultNav;\n"},216:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(2),s=a(i),p=n(4),d=n(7),c=n(18),g=a(c),m=n(17),u=a(m),b=n(5),f=n(16),v=n(9),I=a(v),w=n(8),S=a(w),D=function(e){function t(n){o(this,t);var a=r(this,e.call(this,n));a.onDropdownToggle=function(e){a.setState({isDropdownOpen:e})},a.onDropdownSelect=function(e){a.setState({isDropdownOpen:!a.state.isDropdownOpen})},a.onKebabDropdownToggle=function(e){a.setState({isKebabDropdownOpen:e})},a.onKebabDropdownSelect=function(e){a.setState({isKebabDropdownOpen:!a.state.isKebabDropdownOpen})},a.onNavSelect=function(e){a.setState({activeItem:e.itemId,activeGroup:e.groupId})},a.onNavToggle=function(){a.setState({isNavOpen:!a.state.isNavOpen})};var l="undefined"!=typeof window&&window.innerWidth>=parseInt(d.global_breakpoint_md.value,10);return a.state={isDropdownOpen:!1,isKebabDropdownOpen:!1,isNavOpen:l,activeGroup:"grp-1",activeItem:"grp-1_itm-1"},a}return l(t,e),t.prototype.render=function(){var e,t=this.state,n=t.isDropdownOpen,a=t.isKebabDropdownOpen,o=t.activeItem,r=t.isNavOpen,l=t.activeGroup,i=s.default.createElement(p.Nav,{onSelect:this.onNavSelect,"aria-label":"Nav"},s.default.createElement(p.NavList,null,s.default.createElement(p.NavExpandable,{title:"System Panel",groupId:"grp-1",isActive:"grp-1"===l,isExpanded:!0},s.default.createElement(p.NavItem,{to:"#expandable-1",groupId:"grp-1",itemId:"grp-1_itm-1",isActive:"grp-1_itm-1"===o},"Overview"),s.default.createElement(p.NavItem,{to:"#expandable-2",groupId:"grp-1",itemId:"grp-1_itm-2",isActive:"grp-1_itm-2"===o},"Resource Usage"),s.default.createElement(p.NavItem,{to:"#expandable-3",groupId:"grp-1",itemId:"grp-1_itm-3",isActive:"grp-1_itm-3"===o},"Hypervisors"),s.default.createElement(p.NavItem,{to:"#expandable-4",groupId:"grp-1",itemId:"grp-1_itm-4",isActive:"grp-1_itm-4"===o},"Instances"),s.default.createElement(p.NavItem,{to:"#expandable-5",groupId:"grp-1",itemId:"grp-1_itm-5",isActive:"grp-1_itm-5"===o},"Volumes"),s.default.createElement(p.NavItem,{to:"#expandable-6",groupId:"grp-1",itemId:"grp-1_itm-6",isActive:"grp-1_itm-6"===o},"Network")),s.default.createElement(p.NavExpandable,{title:"Policy",groupId:"grp-2",isActive:"grp-2"===l},s.default.createElement(p.NavItem,{to:"#expandable-4",groupId:"grp-2",itemId:"grp-2_itm-1",isActive:"grp-2_itm-1"===o},"Subnav Link 1"),s.default.createElement(p.NavItem,{to:"#expandable-5",groupId:"grp-2",itemId:"grp-2_itm-2",isActive:"grp-2_itm-2"===o},"Subnav Link 2")),s.default.createElement(p.NavExpandable,{title:"Authentication",groupId:"grp-3",isActive:"grp-3"===l},s.default.createElement(p.NavItem,{to:"#expandable-7",groupId:"grp-3",itemId:"grp-3_itm-1",isActive:"grp-3_itm-1"===o},"Subnav Link 1"),s.default.createElement(p.NavItem,{to:"#expandable-8",groupId:"grp-3",itemId:"grp-3_itm-2",isActive:"grp-3_itm-2"===o},"Subnav Link 2")))),d=s.default.createElement(p.Toolbar,null,s.default.createElement(p.ToolbarGroup,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnLg)},s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.BellIcon,null))),s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.CogIcon,null)))),s.default.createElement(p.ToolbarGroup,null,s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.hiddenOnLg,u.default.mr_0)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onKebabDropdownSelect,toggle:s.default.createElement(p.KebabToggle,{onToggle:this.onKebabDropdownToggle}),isOpen:a},s.default.createElement(p.DropdownItem,null,s.default.createElement(f.BellIcon,null)," Notifications"),s.default.createElement(p.DropdownItem,null,s.default.createElement(f.CogIcon,null)," Settings"))),s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnMd)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onDropdownSelect,isOpen:n,toggle:s.default.createElement(p.DropdownToggle,{onToggle:this.onDropdownToggle},"Kyle Baker")},s.default.createElement(p.DropdownItem,null,"Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Action"),s.default.createElement(p.DropdownItem,{isDisabled:!0},"Disabled Link"),s.default.createElement(p.DropdownItem,{isDisabled:!0,component:"button"},"Disabled Action"),s.default.createElement(p.DropdownSeparator,null),s.default.createElement(p.DropdownItem,null,"Separated Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Separated Action"))))),c=(e={},e[p.BackgroundImageSrc.lg]="/assets/images/pfbg_1200.jpg",e[p.BackgroundImageSrc.md]="/assets/images/pfbg_992.jpg",e[p.BackgroundImageSrc.md2x]="/assets/images/pfbg_992@2x.jpg",e[p.BackgroundImageSrc.sm]="/assets/images/pfbg_768.jpg",e[p.BackgroundImageSrc.sm2x]="/assets/images/pfbg_768@2x.jpg",e[p.BackgroundImageSrc.xl]="/assets/images/pfbg_2000.jpg",e[p.BackgroundImageSrc.xs]="/assets/images/pfbg_576.jpg",e[p.BackgroundImageSrc.xs2x]="/assets/images/pfbg_576@2x.jpg",e[p.BackgroundImageSrc.filter]="/assets/images/background-filter.svg",e),m=s.default.createElement(p.PageHeader,{logo:s.default.createElement(p.Brand,{src:I.default,alt:"Patternfly Logo"}),toolbar:d,avatar:s.default.createElement(p.Avatar,{src:S.default,alt:"Avatar image"}),showNavToggle:!0,onNavToggle:this.onNavToggle}),v=s.default.createElement(p.PageSidebar,{nav:i,isNavOpen:r});return s.default.createElement(s.default.Fragment,null,s.default.createElement(p.BackgroundImage,{src:c}),s.default.createElement(p.Page,{header:m,sidebar:v},s.default.createElement(p.PageSection,{variant:p.PageSectionVariants.light},s.default.createElement(p.TextContent,null,s.default.createElement(p.Text,{component:"h1"},"Main Title"),s.default.createElement(p.Text,{component:"p"},"Body text should be Overpass Regular at 16px. It should have leading of 24px because ",s.default.createElement("br",null),"of itâ€™s relative line height of 1.5."))),s.default.createElement(p.PageSection,null,s.default.createElement(p.Gallery,{gutter:"md"},Array.apply(0,Array(10)).map(function(e,t){return s.default.createElement(p.GalleryItem,{key:t},s.default.createElement(p.Card,null,s.default.createElement(p.CardBody,null,"This is a card")))})))))},t}(s.default.Component);D.title="Using expandable navigation",t.default=D,D.__docgenInfo={description:"",displayName:"PageLayoutExpandableNav"},e.exports=t.default},661:function(e,t){e.exports='import React from \'react\';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from \'@patternfly/react-core\';\nimport { global_breakpoint_md as breakpointMd } from \'@patternfly/react-tokens\';\nimport accessibleStyles from \'@patternfly/patternfly-next/utilities/Accessibility/accessibility.css\';\nimport spacingStyles from \'@patternfly/patternfly-next/utilities/Spacing/spacing.css\';\nimport { css } from \'@patternfly/react-styles\';\nimport { BellIcon, CogIcon } from \'@patternfly/react-icons\';\nimport brandImg from \'./l_pf-reverse-164x11.png\';\nimport avatarImg from \'./img_avatar.png\';\n\nclass PageLayoutExpandableNav extends React.Component {\n  static title = \'Using expandable navigation\';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== \'undefined\' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      isNavOpen,\n      activeGroup: \'grp-1\',\n      activeItem: \'grp-1_itm-1\'\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId,\n      activeGroup: result.groupId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen, activeGroup } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label="Nav">\n        <NavList>\n          <NavExpandable title="System Panel" groupId="grp-1" isActive={activeGroup === \'grp-1\'} isExpanded>\n            <NavItem to="#expandable-1" groupId="grp-1" itemId="grp-1_itm-1" isActive={activeItem === \'grp-1_itm-1\'}>\n              Overview\n            </NavItem>\n            <NavItem to="#expandable-2" groupId="grp-1" itemId="grp-1_itm-2" isActive={activeItem === \'grp-1_itm-2\'}>\n              Resource Usage\n            </NavItem>\n            <NavItem to="#expandable-3" groupId="grp-1" itemId="grp-1_itm-3" isActive={activeItem === \'grp-1_itm-3\'}>\n              Hypervisors\n            </NavItem>\n            <NavItem to="#expandable-4" groupId="grp-1" itemId="grp-1_itm-4" isActive={activeItem === \'grp-1_itm-4\'}>\n              Instances\n            </NavItem>\n            <NavItem to="#expandable-5" groupId="grp-1" itemId="grp-1_itm-5" isActive={activeItem === \'grp-1_itm-5\'}>\n              Volumes\n            </NavItem>\n            <NavItem to="#expandable-6" groupId="grp-1" itemId="grp-1_itm-6" isActive={activeItem === \'grp-1_itm-6\'}>\n              Network\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title="Policy" groupId="grp-2" isActive={activeGroup === \'grp-2\'}>\n            <NavItem to="#expandable-4" groupId="grp-2" itemId="grp-2_itm-1" isActive={activeItem === \'grp-2_itm-1\'}>\n              Subnav Link 1\n            </NavItem>\n            <NavItem to="#expandable-5" groupId="grp-2" itemId="grp-2_itm-2" isActive={activeItem === \'grp-2_itm-2\'}>\n              Subnav Link 2\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title="Authentication" groupId="grp-3" isActive={activeGroup === \'grp-3\'}>\n            <NavItem to="#expandable-7" groupId="grp-3" itemId="grp-3_itm-1" isActive={activeItem === \'grp-3_itm-1\'}>\n              Subnav Link 1\n            </NavItem>\n            <NavItem to="#expandable-8" groupId="grp-3" itemId="grp-3_itm-2" isActive={activeItem === \'grp-3_itm-2\'}>\n              Subnav Link 2\n            </NavItem>\n          </NavExpandable>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id="nav-toggle" aria-label="Overflow actions" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id="nav-toggle" aria-label="Overflow actions" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position="right"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position="right"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component="button">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component="button">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component="button">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: \'/assets/images/pfbg_1200.jpg\',\n      [BackgroundImageSrc.md]: \'/assets/images/pfbg_992.jpg\',\n      [BackgroundImageSrc.md2x]: \'/assets/images/pfbg_992@2x.jpg\',\n      [BackgroundImageSrc.sm]: \'/assets/images/pfbg_768.jpg\',\n      [BackgroundImageSrc.sm2x]: \'/assets/images/pfbg_768@2x.jpg\',\n      [BackgroundImageSrc.xl]: \'/assets/images/pfbg_2000.jpg\',\n      [BackgroundImageSrc.xs]: \'/assets/images/pfbg_576.jpg\',\n      [BackgroundImageSrc.xs2x]: \'/assets/images/pfbg_576@2x.jpg\',\n      [BackgroundImageSrc.filter]: \'/assets/images/background-filter.svg\'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt="Patternfly Logo" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt="Avatar image" />}\n        showNavToggle\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} sidebar={Sidebar}>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component="h1">Main Title</Text>\n              <Text component="p">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of itâ€™s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter="md">\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutExpandableNav;\n'},662:function(e,t){e.exports='import React from \'react\';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  KebabToggle,\n  Nav,\n  NavGroup,\n  NavItem,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from \'@patternfly/react-core\';\nimport { global_breakpoint_md as breakpointMd } from \'@patternfly/react-tokens\';\nimport accessibleStyles from \'@patternfly/patternfly-next/utilities/Accessibility/accessibility.css\';\nimport spacingStyles from \'@patternfly/patternfly-next/utilities/Spacing/spacing.css\';\nimport { css } from \'@patternfly/react-styles\';\nimport { BellIcon, CogIcon } from \'@patternfly/react-icons\';\nimport brandImg from \'./l_pf-reverse-164x11.png\';\nimport avatarImg from \'./img_avatar.png\';\n\nclass PageLayoutGroupsNav extends React.Component {\n  static title = \'Using grouped navigation\';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== \'undefined\' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: \'grp-1_itm-1\',\n      isNavOpen\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label="Nav">\n        <NavGroup title="System Panel">\n          <NavItem to="#grouped-1" itemId="grp-1_itm-1" isActive={activeItem === \'grp-1_itm-1\'}>\n            Overview\n          </NavItem>\n          <NavItem to="#grouped-2" itemId="grp-1_itm-2" isActive={activeItem === \'grp-1_itm-2\'}>\n            Resource Usage\n          </NavItem>\n          <NavItem to="#grouped-3" itemId="grp-1_itm-3" isActive={activeItem === \'grp-1_itm-3\'}>\n            Hypervisors\n          </NavItem>\n          <NavItem to="#grouped-4" itemId="grp-1_itm-4" isActive={activeItem === \'grp-1_itm-4\'}>\n            Instances\n          </NavItem>\n          <NavItem to="#grouped-5" itemId="grp-1_itm-5" isActive={activeItem === \'grp-1_itm-5\'}>\n            Volumes\n          </NavItem>\n          <NavItem to="#grouped-6" itemId="grp-1_itm-6" isActive={activeItem === \'grp-1_itm-6\'}>\n            Network\n          </NavItem>\n        </NavGroup>\n        <NavGroup title="Policy">\n          <NavItem to="#grouped-7" itemId="grp-2_itm-1" isActive={activeItem === \'grp-2_itm-1\'}>\n            Hosts\n          </NavItem>\n          <NavItem to="#grouped-8" itemId="grp-2_itm-2" isActive={activeItem === \'grp-2_itm-2\'}>\n            Virtual Machines\n          </NavItem>\n          <NavItem to="#grouped-9" itemId="grp-2_itm-3" isActive={activeItem === \'grp-2_itm-3\'}>\n            Storage\n          </NavItem>\n        </NavGroup>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id="nav-toggle" aria-label="Overflow actions" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id="nav-toggle" aria-label="Overflow actions" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position="right"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position="right"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component="button">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component="button">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component="button">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: \'/assets/images/pfbg_1200.jpg\',\n      [BackgroundImageSrc.md]: \'/assets/images/pfbg_992.jpg\',\n      [BackgroundImageSrc.md2x]: \'/assets/images/pfbg_992@2x.jpg\',\n      [BackgroundImageSrc.sm]: \'/assets/images/pfbg_768.jpg\',\n      [BackgroundImageSrc.sm2x]: \'/assets/images/pfbg_768@2x.jpg\',\n      [BackgroundImageSrc.xl]: \'/assets/images/pfbg_2000.jpg\',\n      [BackgroundImageSrc.xs]: \'/assets/images/pfbg_576.jpg\',\n      [BackgroundImageSrc.xs2x]: \'/assets/images/pfbg_576@2x.jpg\',\n      [BackgroundImageSrc.filter]: \'/assets/images/background-filter.svg\'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt="Patternfly Logo" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt="Avatar image" />}\n        showNavToggle\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} sidebar={Sidebar}>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component="h1">Main Title</Text>\n              <Text component="p">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of itâ€™s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection variant={PageSectionVariants.light}>Light</PageSection>\n          <PageSection variant={PageSectionVariants.dark}>Dark</PageSection>\n          <PageSection variant={PageSectionVariants.darker}>Darker</PageSection>\n          <PageSection>Content</PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutGroupsNav;\n';
},217:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(2),s=a(i),p=n(4),d=n(7),c=n(18),g=a(c),m=n(17),u=a(m),b=n(5),f=n(16),v=n(9),I=a(v),w=n(8),S=a(w),D=function(e){function t(n){o(this,t);var a=r(this,e.call(this,n));a.onDropdownToggle=function(e){a.setState({isDropdownOpen:e})},a.onDropdownSelect=function(e){a.setState({isDropdownOpen:!a.state.isDropdownOpen})},a.onKebabDropdownToggle=function(e){a.setState({isKebabDropdownOpen:e})},a.onKebabDropdownSelect=function(e){a.setState({isKebabDropdownOpen:!a.state.isKebabDropdownOpen})},a.onNavSelect=function(e){a.setState({activeItem:e.itemId})},a.onNavToggle=function(){a.setState({isNavOpen:!a.state.isNavOpen})};var l="undefined"!=typeof window&&window.innerWidth>=parseInt(d.global_breakpoint_md.value,10);return a.state={isDropdownOpen:!1,isKebabDropdownOpen:!1,activeItem:"grp-1_itm-1",isNavOpen:l},a}return l(t,e),t.prototype.render=function(){var e,t=this.state,n=t.isDropdownOpen,a=t.isKebabDropdownOpen,o=t.activeItem,r=t.isNavOpen,l=s.default.createElement(p.Nav,{onSelect:this.onNavSelect,"aria-label":"Nav"},s.default.createElement(p.NavGroup,{title:"System Panel"},s.default.createElement(p.NavItem,{to:"#grouped-1",itemId:"grp-1_itm-1",isActive:"grp-1_itm-1"===o},"Overview"),s.default.createElement(p.NavItem,{to:"#grouped-2",itemId:"grp-1_itm-2",isActive:"grp-1_itm-2"===o},"Resource Usage"),s.default.createElement(p.NavItem,{to:"#grouped-3",itemId:"grp-1_itm-3",isActive:"grp-1_itm-3"===o},"Hypervisors"),s.default.createElement(p.NavItem,{to:"#grouped-4",itemId:"grp-1_itm-4",isActive:"grp-1_itm-4"===o},"Instances"),s.default.createElement(p.NavItem,{to:"#grouped-5",itemId:"grp-1_itm-5",isActive:"grp-1_itm-5"===o},"Volumes"),s.default.createElement(p.NavItem,{to:"#grouped-6",itemId:"grp-1_itm-6",isActive:"grp-1_itm-6"===o},"Network")),s.default.createElement(p.NavGroup,{title:"Policy"},s.default.createElement(p.NavItem,{to:"#grouped-7",itemId:"grp-2_itm-1",isActive:"grp-2_itm-1"===o},"Hosts"),s.default.createElement(p.NavItem,{to:"#grouped-8",itemId:"grp-2_itm-2",isActive:"grp-2_itm-2"===o},"Virtual Machines"),s.default.createElement(p.NavItem,{to:"#grouped-9",itemId:"grp-2_itm-3",isActive:"grp-2_itm-3"===o},"Storage"))),i=s.default.createElement(p.Toolbar,null,s.default.createElement(p.ToolbarGroup,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnLg)},s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.BellIcon,null))),s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.CogIcon,null)))),s.default.createElement(p.ToolbarGroup,null,s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.hiddenOnLg,u.default.mr_0)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onKebabDropdownSelect,toggle:s.default.createElement(p.KebabToggle,{onToggle:this.onKebabDropdownToggle}),isOpen:a},s.default.createElement(p.DropdownItem,null,s.default.createElement(f.BellIcon,null)," Notifications"),s.default.createElement(p.DropdownItem,null,s.default.createElement(f.CogIcon,null)," Settings"))),s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnMd)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onDropdownSelect,isOpen:n,toggle:s.default.createElement(p.DropdownToggle,{onToggle:this.onDropdownToggle},"Kyle Baker")},s.default.createElement(p.DropdownItem,null,"Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Action"),s.default.createElement(p.DropdownItem,{isDisabled:!0},"Disabled Link"),s.default.createElement(p.DropdownItem,{isDisabled:!0,component:"button"},"Disabled Action"),s.default.createElement(p.DropdownSeparator,null),s.default.createElement(p.DropdownItem,null,"Separated Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Separated Action"))))),d=(e={},e[p.BackgroundImageSrc.lg]="/assets/images/pfbg_1200.jpg",e[p.BackgroundImageSrc.md]="/assets/images/pfbg_992.jpg",e[p.BackgroundImageSrc.md2x]="/assets/images/pfbg_992@2x.jpg",e[p.BackgroundImageSrc.sm]="/assets/images/pfbg_768.jpg",e[p.BackgroundImageSrc.sm2x]="/assets/images/pfbg_768@2x.jpg",e[p.BackgroundImageSrc.xl]="/assets/images/pfbg_2000.jpg",e[p.BackgroundImageSrc.xs]="/assets/images/pfbg_576.jpg",e[p.BackgroundImageSrc.xs2x]="/assets/images/pfbg_576@2x.jpg",e[p.BackgroundImageSrc.filter]="/assets/images/background-filter.svg",e),c=s.default.createElement(p.PageHeader,{logo:s.default.createElement(p.Brand,{src:I.default,alt:"Patternfly Logo"}),toolbar:i,avatar:s.default.createElement(p.Avatar,{src:S.default,alt:"Avatar image"}),showNavToggle:!0,onNavToggle:this.onNavToggle}),m=s.default.createElement(p.PageSidebar,{nav:l,isNavOpen:r});return s.default.createElement(s.default.Fragment,null,s.default.createElement(p.BackgroundImage,{src:d}),s.default.createElement(p.Page,{header:c,sidebar:m},s.default.createElement(p.PageSection,{variant:p.PageSectionVariants.light},s.default.createElement(p.TextContent,null,s.default.createElement(p.Text,{component:"h1"},"Main Title"),s.default.createElement(p.Text,{component:"p"},"Body text should be Overpass Regular at 16px. It should have leading of 24px because ",s.default.createElement("br",null),"of itâ€™s relative line height of 1.5."))),s.default.createElement(p.PageSection,{variant:p.PageSectionVariants.light},"Light"),s.default.createElement(p.PageSection,{variant:p.PageSectionVariants.dark},"Dark"),s.default.createElement(p.PageSection,{variant:p.PageSectionVariants.darker},"Darker"),s.default.createElement(p.PageSection,null,"Content")))},t}(s.default.Component);D.title="Using grouped navigation",t.default=D,D.__docgenInfo={description:"",displayName:"PageLayoutGroupsNav"},e.exports=t.default},663:function(e,t){e.exports="import React from 'react';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  NavVariants,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport brandImg from './l_pf-reverse-164x11.png';\nimport avatarImg from './img_avatar.png';\n\nclass PageLayoutHorizontalNav extends React.Component {\n  static title = 'Using horizontal navigation';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 0,\n      isNavOpen\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList variant={NavVariants.horizontal}>\n          <NavItem to=\"#nav-link1\" itemId={0} isActive={activeItem === 0}>\n            System Panel\n          </NavItem>\n          <NavItem to=\"#nav-link2\" itemId={1} isActive={activeItem === 1}>\n            Policy\n          </NavItem>\n          <NavItem to=\"#nav-link3\" itemId={2} isActive={activeItem === 2}>\n            Authentication\n          </NavItem>\n          <NavItem to=\"#nav-link4\" itemId={3} isActive={activeItem === 3}>\n            Network Services\n          </NavItem>\n          <NavItem to=\"#nav-link5\" itemId={4} isActive={activeItem === 4}>\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component=\"button\">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component=\"button\">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component=\"button\">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt=\"Avatar image\" />}\n        topNav={PageNav}\n      />\n    );\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header}>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of itâ€™s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutHorizontalNav;\n"},218:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(2),s=a(i),p=n(4),d=n(7),c=n(18),g=a(c),m=n(17),u=a(m),b=n(5),f=n(16),v=n(9),I=a(v),w=n(8),S=a(w),D=function(e){function t(n){o(this,t);var a=r(this,e.call(this,n));a.onDropdownToggle=function(e){a.setState({isDropdownOpen:e})},a.onDropdownSelect=function(e){a.setState({isDropdownOpen:!a.state.isDropdownOpen})},a.onKebabDropdownToggle=function(e){a.setState({isKebabDropdownOpen:e})},a.onKebabDropdownSelect=function(e){a.setState({isKebabDropdownOpen:!a.state.isKebabDropdownOpen})},a.onNavSelect=function(e){a.setState({activeItem:e.itemId})},a.onNavToggle=function(){a.setState({isNavOpen:!a.state.isNavOpen})};var l="undefined"!=typeof window&&window.innerWidth>=parseInt(d.global_breakpoint_md.value,10);return a.state={isDropdownOpen:!1,isKebabDropdownOpen:!1,activeItem:0,isNavOpen:l},a}return l(t,e),t.prototype.render=function(){var e,t=this.state,n=t.isDropdownOpen,a=t.isKebabDropdownOpen,o=t.activeItem,r=(t.isNavOpen,s.default.createElement(p.Nav,{onSelect:this.onNavSelect,"aria-label":"Nav"},s.default.createElement(p.NavList,{variant:p.NavVariants.horizontal},s.default.createElement(p.NavItem,{to:"#nav-link1",itemId:0,isActive:0===o},"System Panel"),s.default.createElement(p.NavItem,{to:"#nav-link2",itemId:1,isActive:1===o},"Policy"),s.default.createElement(p.NavItem,{to:"#nav-link3",itemId:2,isActive:2===o},"Authentication"),s.default.createElement(p.NavItem,{to:"#nav-link4",itemId:3,isActive:3===o},"Network Services"),s.default.createElement(p.NavItem,{to:"#nav-link5",itemId:4,isActive:4===o},"Server")))),l=s.default.createElement(p.Toolbar,null,s.default.createElement(p.ToolbarGroup,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnLg)},s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.BellIcon,null))),s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.CogIcon,null)))),s.default.createElement(p.ToolbarGroup,null,s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.hiddenOnLg,u.default.mr_0)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onKebabDropdownSelect,toggle:s.default.createElement(p.KebabToggle,{onToggle:this.onKebabDropdownToggle}),isOpen:a},s.default.createElement(p.DropdownItem,null,s.default.createElement(f.BellIcon,null)," Notifications"),s.default.createElement(p.DropdownItem,null,s.default.createElement(f.CogIcon,null)," Settings"))),s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnMd)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onDropdownSelect,isOpen:n,toggle:s.default.createElement(p.DropdownToggle,{onToggle:this.onDropdownToggle},"Kyle Baker")},s.default.createElement(p.DropdownItem,null,"Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Action"),s.default.createElement(p.DropdownItem,{isDisabled:!0},"Disabled Link"),s.default.createElement(p.DropdownItem,{isDisabled:!0,component:"button"},"Disabled Action"),s.default.createElement(p.DropdownSeparator,null),s.default.createElement(p.DropdownItem,null,"Separated Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Separated Action"))))),i=(e={},e[p.BackgroundImageSrc.lg]="/assets/images/pfbg_1200.jpg",e[p.BackgroundImageSrc.md]="/assets/images/pfbg_992.jpg",e[p.BackgroundImageSrc.md2x]="/assets/images/pfbg_992@2x.jpg",e[p.BackgroundImageSrc.sm]="/assets/images/pfbg_768.jpg",e[p.BackgroundImageSrc.sm2x]="/assets/images/pfbg_768@2x.jpg",e[p.BackgroundImageSrc.xl]="/assets/images/pfbg_2000.jpg",e[p.BackgroundImageSrc.xs]="/assets/images/pfbg_576.jpg",e[p.BackgroundImageSrc.xs2x]="/assets/images/pfbg_576@2x.jpg",e[p.BackgroundImageSrc.filter]="/assets/images/background-filter.svg",e),d=s.default.createElement(p.PageHeader,{logo:s.default.createElement(p.Brand,{src:I.default,alt:"Patternfly Logo"}),toolbar:l,avatar:s.default.createElement(p.Avatar,{src:S.default,alt:"Avatar image"}),topNav:r});return s.default.createElement(s.default.Fragment,null,s.default.createElement(p.BackgroundImage,{src:i}),s.default.createElement(p.Page,{header:d},s.default.createElement(p.PageSection,{variant:p.PageSectionVariants.light},s.default.createElement(p.TextContent,null,s.default.createElement(p.Text,{component:"h1"},"Main Title"),s.default.createElement(p.Text,{component:"p"},"Body text should be Overpass Regular at 16px. It should have leading of 24px because ",s.default.createElement("br",null),"of itâ€™s relative line height of 1.5."))),s.default.createElement(p.PageSection,null,s.default.createElement(p.Gallery,{gutter:"md"},Array.apply(0,Array(10)).map(function(e,t){return s.default.createElement(p.GalleryItem,{key:t},s.default.createElement(p.Card,null,s.default.createElement(p.CardBody,null,"This is a card")))})))))},t}(s.default.Component);D.title="Using horizontal navigation",t.default=D,D.__docgenInfo={description:"",displayName:"PageLayoutHorizontalNav"},e.exports=t.default},219:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(2),s=a(i),p=n(4),d=n(7),c=n(18),g=a(c),m=n(17),u=a(m),b=n(5),f=n(16),v=n(9),I=a(v),w=n(8),S=a(w),D=function(e){function t(n){o(this,t);var a=r(this,e.call(this,n));a.onDropdownToggle=function(e){a.setState({isDropdownOpen:e})},a.onDropdownSelect=function(e){a.setState({isDropdownOpen:!a.state.isDropdownOpen})},a.onKebabDropdownToggle=function(e){a.setState({isKebabDropdownOpen:e})},a.onKebabDropdownSelect=function(e){a.setState({isKebabDropdownOpen:!a.state.isKebabDropdownOpen})},a.onNavSelect=function(e){a.setState({activeItem:e.itemId})},a.onNavToggle=function(){a.setState({isNavOpen:!a.state.isNavOpen})};var l="undefined"!=typeof window&&window.innerWidth>=parseInt(d.global_breakpoint_md.value,10);return a.state={isDropdownOpen:!1,isKebabDropdownOpen:!1,activeItem:0,isNavOpen:l},a}return l(t,e),t.prototype.render=function(){var e,t=this.state,n=t.isDropdownOpen,a=t.isKebabDropdownOpen,o=t.activeItem,r=(t.isNavOpen,s.default.createElement(p.Nav,{onSelect:this.onNavSelect,"aria-label":"Nav"},s.default.createElement(p.NavList,{variant:p.NavVariants.horizontal},s.default.createElement(p.NavItem,{to:"#nav-link1",itemId:0,isActive:0===o},"System Panel"),s.default.createElement(p.NavItem,{to:"#nav-link2",itemId:1,isActive:1===o},"Policy"),s.default.createElement(p.NavItem,{to:"#nav-link3",itemId:2,isActive:2===o},"Authentication"),s.default.createElement(p.NavItem,{to:"#nav-link4",itemId:3,isActive:3===o},"Network Services"),s.default.createElement(p.NavItem,{to:"#nav-link5",itemId:4,isActive:4===o},"Server")))),l=s.default.createElement(p.Toolbar,null,s.default.createElement(p.ToolbarGroup,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnLg)},s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.BellIcon,null))),s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.CogIcon,null)))),s.default.createElement(p.ToolbarGroup,null,s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.hiddenOnLg,u.default.mr_0)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onKebabDropdownSelect,toggle:s.default.createElement(p.KebabToggle,{onToggle:this.onKebabDropdownToggle}),isOpen:a},s.default.createElement(p.DropdownItem,null,s.default.createElement(f.BellIcon,null)," Notifications"),s.default.createElement(p.DropdownItem,null,s.default.createElement(f.CogIcon,null)," Settings"))),s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnMd)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onDropdownSelect,isOpen:n,toggle:s.default.createElement(p.DropdownToggle,{onToggle:this.onDropdownToggle},"Kyle Baker")},s.default.createElement(p.DropdownItem,null,"Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Action"),s.default.createElement(p.DropdownItem,{isDisabled:!0},"Disabled Link"),s.default.createElement(p.DropdownItem,{isDisabled:!0,component:"button"},"Disabled Action"),s.default.createElement(p.DropdownSeparator,null),s.default.createElement(p.DropdownItem,null,"Separated Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Separated Action"))))),i=(e={},e[p.BackgroundImageSrc.lg]="/assets/images/pfbg_1200.jpg",e[p.BackgroundImageSrc.md]="/assets/images/pfbg_992.jpg",e[p.BackgroundImageSrc.md2x]="/assets/images/pfbg_992@2x.jpg",e[p.BackgroundImageSrc.sm]="/assets/images/pfbg_768.jpg",e[p.BackgroundImageSrc.sm2x]="/assets/images/pfbg_768@2x.jpg",e[p.BackgroundImageSrc.xl]="/assets/images/pfbg_2000.jpg",e[p.BackgroundImageSrc.xs]="/assets/images/pfbg_576.jpg",e[p.BackgroundImageSrc.xs2x]="/assets/images/pfbg_576@2x.jpg",e[p.BackgroundImageSrc.filter]="/assets/images/background-filter.svg",e),d=s.default.createElement(p.PageHeader,{logo:s.default.createElement(p.Brand,{src:I.default,alt:"Patternfly Logo"}),toolbar:l,avatar:s.default.createElement(p.Avatar,{src:S.default,alt:"Avatar image"}),topNav:r});return s.default.createElement(s.default.Fragment,null,s.default.createElement(p.BackgroundImage,{src:i}),s.default.createElement(p.Page,{header:d,useCondensed:!0},s.default.createElement(p.PageSection,{variant:p.PageSectionVariants.light},s.default.createElement(p.TextContent,null,s.default.createElement(p.Text,{component:"h1"},"Main Title"),s.default.createElement(p.Text,{component:"p"},"Body text should be Overpass Regular at 16px. It should have leading of 24px because ",s.default.createElement("br",null),"of itâ€™s relative line height of 1.5."))),s.default.createElement(p.PageSection,null,s.default.createElement(p.Gallery,{gutter:"md"},Array.apply(0,Array(50)).map(function(e,t){return s.default.createElement(p.GalleryItem,{key:t},s.default.createElement(p.Card,null,s.default.createElement(p.CardBody,null,"This is a card")))})))))},t}(s.default.Component);D.title="Using horizontal navigation with condensed header",t.default=D,D.__docgenInfo={description:"",displayName:"PageLayoutHorizontalNavCondensed"},e.exports=t.default},664:function(e,t){e.exports="import React from 'react';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  NavVariants,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport brandImg from './l_pf-reverse-164x11.png';\nimport avatarImg from './img_avatar.png';\n\nclass PageLayoutHorizontalNavCondensed extends React.Component {\n  static title = 'Using horizontal navigation with condensed header';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 0,\n      isNavOpen\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList variant={NavVariants.horizontal}>\n          <NavItem to=\"#nav-link1\" itemId={0} isActive={activeItem === 0}>\n            System Panel\n          </NavItem>\n          <NavItem to=\"#nav-link2\" itemId={1} isActive={activeItem === 1}>\n            Policy\n          </NavItem>\n          <NavItem to=\"#nav-link3\" itemId={2} isActive={activeItem === 2}>\n            Authentication\n          </NavItem>\n          <NavItem to=\"#nav-link4\" itemId={3} isActive={activeItem === 3}>\n            Network Services\n          </NavItem>\n          <NavItem to=\"#nav-link5\" itemId={4} isActive={activeItem === 4}>\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component=\"button\">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component=\"button\">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component=\"button\">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt=\"Avatar image\" />}\n        topNav={PageNav}\n      />\n    );\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} useCondensed>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of itâ€™s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(50)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutHorizontalNavCondensed;\n";
},220:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(2),s=a(i),p=n(4),d=n(7),c=n(18),g=a(c),m=n(17),u=a(m),b=n(5),f=n(16),v=n(9),I=a(v),w=n(8),S=a(w),D=function(e){function t(n){o(this,t);var a=r(this,e.call(this,n));a.onDropdownToggle=function(e){a.setState({isDropdownOpen:e})},a.onDropdownSelect=function(e){a.setState({isDropdownOpen:!a.state.isDropdownOpen})},a.onKebabDropdownToggle=function(e){a.setState({isKebabDropdownOpen:e})},a.onKebabDropdownSelect=function(e){a.setState({isKebabDropdownOpen:!a.state.isKebabDropdownOpen})},a.onNavSelect=function(e){a.setState({activeItem:e.itemId})},a.onNavToggle=function(){a.setState({isNavOpen:!a.state.isNavOpen})};var l="undefined"!=typeof window&&window.innerWidth>=parseInt(d.global_breakpoint_md.value,10);return a.state={isDropdownOpen:!1,isKebabDropdownOpen:!1,activeItem:0,isNavOpen:l},a}return l(t,e),t.prototype.render=function(){var e,t=this.state,n=t.isDropdownOpen,a=t.isKebabDropdownOpen,o=t.activeItem,r=t.isNavOpen,l=s.default.createElement(p.Nav,{onSelect:this.onNavSelect,"aria-label":"Nav"},s.default.createElement(p.NavList,{variant:p.NavVariants.simple},s.default.createElement(p.NavItem,{to:"#nav-link1",itemId:0,isActive:0===o},"System Panel"),s.default.createElement(p.NavItem,{to:"#nav-link2",itemId:1,isActive:1===o},"Policy"),s.default.createElement(p.NavItem,{to:"#nav-link3",itemId:2,isActive:2===o},"Authentication"),s.default.createElement(p.NavItem,{to:"#nav-link4",itemId:3,isActive:3===o},"Network Services"),s.default.createElement(p.NavItem,{to:"#nav-link5",itemId:4,isActive:4===o},"Server"))),i=s.default.createElement(p.Toolbar,null,s.default.createElement(p.ToolbarGroup,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnLg)},s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.BellIcon,null))),s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.CogIcon,null)))),s.default.createElement(p.ToolbarGroup,null,s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.hiddenOnLg,u.default.mr_0)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onKebabDropdownSelect,toggle:s.default.createElement(p.KebabToggle,{onToggle:this.onKebabDropdownToggle}),isOpen:a},s.default.createElement(p.DropdownItem,null,s.default.createElement(f.BellIcon,null)," Notifications"),s.default.createElement(p.DropdownItem,null,s.default.createElement(f.CogIcon,null)," Settings"))),s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnMd)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onDropdownSelect,isOpen:n,toggle:s.default.createElement(p.DropdownToggle,{onToggle:this.onDropdownToggle},"Kyle Baker")},s.default.createElement(p.DropdownItem,null,"Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Action"),s.default.createElement(p.DropdownItem,{isDisabled:!0},"Disabled Link"),s.default.createElement(p.DropdownItem,{isDisabled:!0,component:"button"},"Disabled Action"),s.default.createElement(p.DropdownSeparator,null),s.default.createElement(p.DropdownItem,null,"Separated Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Separated Action"))))),d=(e={},e[p.BackgroundImageSrc.lg]="/assets/images/pfbg_1200.jpg",e[p.BackgroundImageSrc.md]="/assets/images/pfbg_992.jpg",e[p.BackgroundImageSrc.md2x]="/assets/images/pfbg_992@2x.jpg",e[p.BackgroundImageSrc.sm]="/assets/images/pfbg_768.jpg",e[p.BackgroundImageSrc.sm2x]="/assets/images/pfbg_768@2x.jpg",e[p.BackgroundImageSrc.xl]="/assets/images/pfbg_2000.jpg",e[p.BackgroundImageSrc.xs]="/assets/images/pfbg_576.jpg",e[p.BackgroundImageSrc.xs2x]="/assets/images/pfbg_576@2x.jpg",e[p.BackgroundImageSrc.filter]="/assets/images/background-filter.svg",e),c=s.default.createElement(p.PageHeader,{logo:s.default.createElement(p.Brand,{src:I.default,alt:"Patternfly Logo"}),toolbar:i,avatar:s.default.createElement(p.Avatar,{src:S.default,alt:"Avatar image"}),showNavToggle:!0,onNavToggle:this.onNavToggle}),m=s.default.createElement(p.PageSidebar,{nav:l,isNavOpen:r});return s.default.createElement(s.default.Fragment,null,s.default.createElement(p.BackgroundImage,{src:d}),s.default.createElement(p.Page,{header:c,sidebar:m},s.default.createElement(p.PageSection,{variant:p.PageSectionVariants.light},s.default.createElement(p.TextContent,null,s.default.createElement(p.Text,{component:"h1"},"Main Title"),s.default.createElement(p.Text,{component:"p"},"Body text should be Overpass Regular at 16px. It should have leading of 24px because ",s.default.createElement("br",null),"of itâ€™s relative line height of 1.5."))),s.default.createElement(p.PageSection,null,s.default.createElement(p.Gallery,{gutter:"md"},Array.apply(0,Array(10)).map(function(e,t){return s.default.createElement(p.GalleryItem,{key:t},s.default.createElement(p.Card,null,s.default.createElement(p.CardBody,null,"This is a card")))})))))},t}(s.default.Component);D.title="Using simple navigation",t.default=D,D.__docgenInfo={description:"",displayName:"PageLayoutSimpleNav"},e.exports=t.default},665:function(e,t){e.exports="import React from 'react';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  NavVariants,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport brandImg from './l_pf-reverse-164x11.png';\nimport avatarImg from './img_avatar.png';\n\nclass PageLayoutSimpleNav extends React.Component {\n  static title = 'Using simple navigation';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 0,\n      isNavOpen\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList variant={NavVariants.simple}>\n          <NavItem to=\"#nav-link1\" itemId={0} isActive={activeItem === 0}>\n            System Panel\n          </NavItem>\n          <NavItem to=\"#nav-link2\" itemId={1} isActive={activeItem === 1}>\n            Policy\n          </NavItem>\n          <NavItem to=\"#nav-link3\" itemId={2} isActive={activeItem === 2}>\n            Authentication\n          </NavItem>\n          <NavItem to=\"#nav-link4\" itemId={3} isActive={activeItem === 3}>\n            Network Services\n          </NavItem>\n          <NavItem to=\"#nav-link5\" itemId={4} isActive={activeItem === 4}>\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component=\"button\">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component=\"button\">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component=\"button\">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt=\"Avatar image\" />}\n        showNavToggle\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} sidebar={Sidebar}>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of itâ€™s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutSimpleNav;\n"},666:function(e,t){e.exports='import React from \'react\';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from \'@patternfly/react-core\';\nimport { global_breakpoint_md as breakpointMd } from \'@patternfly/react-tokens\';\nimport accessibleStyles from \'@patternfly/patternfly-next/utilities/Accessibility/accessibility.css\';\nimport spacingStyles from \'@patternfly/patternfly-next/utilities/Spacing/spacing.css\';\nimport { css } from \'@patternfly/react-styles\';\nimport { BellIcon, CogIcon } from \'@patternfly/react-icons\';\nimport brandImg from \'./l_pf-reverse-164x11.png\';\nimport avatarImg from \'./img_avatar.png\';\n\nclass PageLayoutVerticalNavCondensed extends React.Component {\n  static title = \'Using vertical navigation with condensed header\';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== \'undefined\' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      isNavOpen,\n      activeGroup: \'grp-1\',\n      activeItem: \'grp-1_itm-1\'\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId,\n      activeGroup: result.groupId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen, activeGroup } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label="Nav">\n        <NavList>\n          <NavExpandable title="System Panel" groupId="grp-1" isActive={activeGroup === \'grp-1\'} isExpanded>\n            <NavItem to="#expandable-1" groupId="grp-1" itemId="grp-1_itm-1" isActive={activeItem === \'grp-1_itm-1\'}>\n              Overview\n            </NavItem>\n            <NavItem to="#expandable-2" groupId="grp-1" itemId="grp-1_itm-2" isActive={activeItem === \'grp-1_itm-2\'}>\n              Resource Usage\n            </NavItem>\n            <NavItem to="#expandable-3" groupId="grp-1" itemId="grp-1_itm-3" isActive={activeItem === \'grp-1_itm-3\'}>\n              Hypervisors\n            </NavItem>\n            <NavItem to="#expandable-4" groupId="grp-1" itemId="grp-1_itm-4" isActive={activeItem === \'grp-1_itm-4\'}>\n              Instances\n            </NavItem>\n            <NavItem to="#expandable-5" groupId="grp-1" itemId="grp-1_itm-5" isActive={activeItem === \'grp-1_itm-5\'}>\n              Volumes\n            </NavItem>\n            <NavItem to="#expandable-6" groupId="grp-1" itemId="grp-1_itm-6" isActive={activeItem === \'grp-1_itm-6\'}>\n              Network\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title="Policy" groupId="grp-2" isActive={activeGroup === \'grp-2\'}>\n            <NavItem to="#expandable-4" groupId="grp-2" itemId="grp-2_itm-1" isActive={activeItem === \'grp-2_itm-1\'}>\n              Subnav Link 1\n            </NavItem>\n            <NavItem to="#expandable-5" groupId="grp-2" itemId="grp-2_itm-2" isActive={activeItem === \'grp-2_itm-2\'}>\n              Subnav Link 2\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title="Authentication" groupId="grp-3" isActive={activeGroup === \'grp-3\'}>\n            <NavItem to="#expandable-7" groupId="grp-3" itemId="grp-3_itm-1" isActive={activeItem === \'grp-3_itm-1\'}>\n              Subnav Link 1\n            </NavItem>\n            <NavItem to="#expandable-8" groupId="grp-3" itemId="grp-3_itm-2" isActive={activeItem === \'grp-3_itm-2\'}>\n              Subnav Link 2\n            </NavItem>\n          </NavExpandable>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id="nav-toggle" aria-label="Overflow actions" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id="nav-toggle" aria-label="Overflow actions" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position="right"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position="right"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component="button">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component="button">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component="button">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: \'/assets/images/pfbg_1200.jpg\',\n      [BackgroundImageSrc.md]: \'/assets/images/pfbg_992.jpg\',\n      [BackgroundImageSrc.md2x]: \'/assets/images/pfbg_992@2x.jpg\',\n      [BackgroundImageSrc.sm]: \'/assets/images/pfbg_768.jpg\',\n      [BackgroundImageSrc.sm2x]: \'/assets/images/pfbg_768@2x.jpg\',\n      [BackgroundImageSrc.xl]: \'/assets/images/pfbg_2000.jpg\',\n      [BackgroundImageSrc.xs]: \'/assets/images/pfbg_576.jpg\',\n      [BackgroundImageSrc.xs2x]: \'/assets/images/pfbg_576@2x.jpg\',\n      [BackgroundImageSrc.filter]: \'/assets/images/background-filter.svg\'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt="Patternfly Logo" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt="Avatar image" />}\n        showNavToggle\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} sidebar={Sidebar} useCondensed>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component="h1">Main Title</Text>\n              <Text component="p">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of itâ€™s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter="md">\n              {Array.apply(0, Array(50)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutVerticalNavCondensed;\n'},221:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(2),s=a(i),p=n(4),d=n(7),c=n(18),g=a(c),m=n(17),u=a(m),b=n(5),f=n(16),v=n(9),I=a(v),w=n(8),S=a(w),D=function(e){function t(n){o(this,t);var a=r(this,e.call(this,n));a.onDropdownToggle=function(e){a.setState({isDropdownOpen:e})},a.onDropdownSelect=function(e){a.setState({isDropdownOpen:!a.state.isDropdownOpen})},a.onKebabDropdownToggle=function(e){a.setState({isKebabDropdownOpen:e})},a.onKebabDropdownSelect=function(e){a.setState({isKebabDropdownOpen:!a.state.isKebabDropdownOpen})},a.onNavSelect=function(e){a.setState({activeItem:e.itemId,activeGroup:e.groupId})},a.onNavToggle=function(){a.setState({isNavOpen:!a.state.isNavOpen})};var l="undefined"!=typeof window&&window.innerWidth>=parseInt(d.global_breakpoint_md.value,10);return a.state={isDropdownOpen:!1,isKebabDropdownOpen:!1,isNavOpen:l,activeGroup:"grp-1",activeItem:"grp-1_itm-1"},a}return l(t,e),t.prototype.render=function(){var e,t=this.state,n=t.isDropdownOpen,a=t.isKebabDropdownOpen,o=t.activeItem,r=t.isNavOpen,l=t.activeGroup,i=s.default.createElement(p.Nav,{onSelect:this.onNavSelect,"aria-label":"Nav"},s.default.createElement(p.NavList,null,s.default.createElement(p.NavExpandable,{title:"System Panel",groupId:"grp-1",isActive:"grp-1"===l,isExpanded:!0},s.default.createElement(p.NavItem,{to:"#expandable-1",groupId:"grp-1",itemId:"grp-1_itm-1",isActive:"grp-1_itm-1"===o},"Overview"),s.default.createElement(p.NavItem,{to:"#expandable-2",groupId:"grp-1",itemId:"grp-1_itm-2",isActive:"grp-1_itm-2"===o},"Resource Usage"),s.default.createElement(p.NavItem,{to:"#expandable-3",groupId:"grp-1",itemId:"grp-1_itm-3",isActive:"grp-1_itm-3"===o},"Hypervisors"),s.default.createElement(p.NavItem,{to:"#expandable-4",groupId:"grp-1",itemId:"grp-1_itm-4",isActive:"grp-1_itm-4"===o},"Instances"),s.default.createElement(p.NavItem,{to:"#expandable-5",groupId:"grp-1",itemId:"grp-1_itm-5",isActive:"grp-1_itm-5"===o},"Volumes"),s.default.createElement(p.NavItem,{to:"#expandable-6",groupId:"grp-1",itemId:"grp-1_itm-6",isActive:"grp-1_itm-6"===o},"Network")),s.default.createElement(p.NavExpandable,{title:"Policy",groupId:"grp-2",isActive:"grp-2"===l},s.default.createElement(p.NavItem,{to:"#expandable-4",groupId:"grp-2",itemId:"grp-2_itm-1",isActive:"grp-2_itm-1"===o},"Subnav Link 1"),s.default.createElement(p.NavItem,{to:"#expandable-5",groupId:"grp-2",itemId:"grp-2_itm-2",isActive:"grp-2_itm-2"===o},"Subnav Link 2")),s.default.createElement(p.NavExpandable,{title:"Authentication",groupId:"grp-3",isActive:"grp-3"===l},s.default.createElement(p.NavItem,{to:"#expandable-7",groupId:"grp-3",itemId:"grp-3_itm-1",isActive:"grp-3_itm-1"===o},"Subnav Link 1"),s.default.createElement(p.NavItem,{to:"#expandable-8",groupId:"grp-3",itemId:"grp-3_itm-2",isActive:"grp-3_itm-2"===o},"Subnav Link 2")))),d=s.default.createElement(p.Toolbar,null,s.default.createElement(p.ToolbarGroup,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnLg)},s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.BellIcon,null))),s.default.createElement(p.ToolbarItem,null,s.default.createElement(p.Button,{id:"nav-toggle","aria-label":"Overflow actions",variant:p.ButtonVariant.plain},s.default.createElement(f.CogIcon,null)))),s.default.createElement(p.ToolbarGroup,null,s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.hiddenOnLg,u.default.mr_0)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onKebabDropdownSelect,toggle:s.default.createElement(p.KebabToggle,{onToggle:this.onKebabDropdownToggle}),isOpen:a},s.default.createElement(p.DropdownItem,null,s.default.createElement(f.BellIcon,null)," Notifications"),s.default.createElement(p.DropdownItem,null,s.default.createElement(f.CogIcon,null)," Settings"))),s.default.createElement(p.ToolbarItem,{className:(0,b.css)(g.default.srOnly,g.default.visibleOnMd)},s.default.createElement(p.Dropdown,{isPlain:!0,position:"right",onSelect:this.onDropdownSelect,isOpen:n,toggle:s.default.createElement(p.DropdownToggle,{onToggle:this.onDropdownToggle},"Kyle Baker")},s.default.createElement(p.DropdownItem,null,"Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Action"),s.default.createElement(p.DropdownItem,{isDisabled:!0},"Disabled Link"),s.default.createElement(p.DropdownItem,{isDisabled:!0,component:"button"},"Disabled Action"),s.default.createElement(p.DropdownSeparator,null),s.default.createElement(p.DropdownItem,null,"Separated Link"),s.default.createElement(p.DropdownItem,{component:"button"},"Separated Action"))))),c=(e={},e[p.BackgroundImageSrc.lg]="/assets/images/pfbg_1200.jpg",e[p.BackgroundImageSrc.md]="/assets/images/pfbg_992.jpg",e[p.BackgroundImageSrc.md2x]="/assets/images/pfbg_992@2x.jpg",e[p.BackgroundImageSrc.sm]="/assets/images/pfbg_768.jpg",e[p.BackgroundImageSrc.sm2x]="/assets/images/pfbg_768@2x.jpg",e[p.BackgroundImageSrc.xl]="/assets/images/pfbg_2000.jpg",e[p.BackgroundImageSrc.xs]="/assets/images/pfbg_576.jpg",e[p.BackgroundImageSrc.xs2x]="/assets/images/pfbg_576@2x.jpg",e[p.BackgroundImageSrc.filter]="/assets/images/background-filter.svg",e),m=s.default.createElement(p.PageHeader,{logo:s.default.createElement(p.Brand,{src:I.default,alt:"Patternfly Logo"}),toolbar:d,avatar:s.default.createElement(p.Avatar,{src:S.default,alt:"Avatar image"}),showNavToggle:!0,onNavToggle:this.onNavToggle}),v=s.default.createElement(p.PageSidebar,{nav:i,isNavOpen:r});return s.default.createElement(s.default.Fragment,null,s.default.createElement(p.BackgroundImage,{src:c}),s.default.createElement(p.Page,{header:m,sidebar:v,useCondensed:!0},s.default.createElement(p.PageSection,{variant:p.PageSectionVariants.light},s.default.createElement(p.TextContent,null,s.default.createElement(p.Text,{component:"h1"},"Main Title"),s.default.createElement(p.Text,{component:"p"},"Body text should be Overpass Regular at 16px. It should have leading of 24px because ",s.default.createElement("br",null),"of itâ€™s relative line height of 1.5."))),s.default.createElement(p.PageSection,null,s.default.createElement(p.Gallery,{gutter:"md"},Array.apply(0,Array(50)).map(function(e,t){return s.default.createElement(p.GalleryItem,{key:t},s.default.createElement(p.Card,null,s.default.createElement(p.CardBody,null,"This is a card")))})))))},t}(s.default.Component);D.title="Using vertical navigation with condensed header",t.default=D,D.__docgenInfo={description:"",displayName:"PageLayoutVerticalNavCondensed"},e.exports=t.default},885:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=n(2),l=a(r),i=n(814),s=a(i),p=n(15),d=a(p),c=[{name:"PageLayoutDefaultNav",path:"../../react-core/src/demos/PageLayout/examples/PageLayoutDefaultNav.js",file:n(660)},{name:"PageLayoutExpandableNav",path:"../../react-core/src/demos/PageLayout/examples/PageLayoutExpandableNav.js",file:n(661)},{name:"PageLayoutGroupsNav",path:"../../react-core/src/demos/PageLayout/examples/PageLayoutGroupsNav.js",file:n(662)},{name:"PageLayoutHorizontalNav",path:"../../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNav.js",file:n(663)},{name:"PageLayoutHorizontalNavCondensed",path:"../../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNavCondensed.js",file:n(664)},{name:"PageLayoutSimpleNav",path:"../../react-core/src/demos/PageLayout/examples/PageLayoutSimpleNav.js",file:n(665)},{name:"PageLayoutVerticalNavCondensed",path:"../../react-core/src/demos/PageLayout/examples/PageLayoutVerticalNavCondensed.js",file:n(666)}],g=[{name:"pf_logo.svg",file:n(10)},{name:"pf_mini_logo_white.svg",file:n(11)},{name:"img_avatar.png",file:n(13)},{name:"pf_logo.svg",file:n(14)},{name:"img_avatar.png",file:n(8)},{name:"l_pf-reverse-164x11.png",file:n(9)},{name:"pfbg_992.jpg",file:n(12)}];t.default=function(){return l.default.createElement(d.default,o({rawExamples:c,images:g},s.default))},e.exports=t.default}});
//# sourceMappingURL=component---tmp-page-layout-demo-docs-js-b1791d08a639f612a337.js.map