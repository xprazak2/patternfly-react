{"version":3,"sources":["webpack:///component---react-core-src-demos-page-layout-examples-page-layout-expandable-nav-js-26e1234eb60a78eb5795.js","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutExpandableNav.js"],"names":["webpackJsonp","216","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","_reactCore","_reactTokens","_accessibility","_accessibility2","_spacing","_spacing2","_reactStyles","_reactIcons","_l_pfReverse164x","_l_pfReverse164x2","_img_avatar","_img_avatar2","PageLayoutExpandableNav","_React$Component","props","this","_this","onDropdownToggle","isDropdownOpen","setState","onDropdownSelect","event","state","onKebabDropdownToggle","isKebabDropdownOpen","onKebabDropdownSelect","onNavSelect","result","activeItem","itemId","activeGroup","groupId","onNavToggle","isNavOpen","window","innerWidth","parseInt","breakpointMd","render","_bgImages","_state","PageNav","createElement","Nav","onSelect","aria-label","NavList","NavExpandable","title","isActive","isExpanded","NavItem","to","PageToolbar","Toolbar","ToolbarGroup","className","css","accessibleStyles","srOnly","visibleOnLg","ToolbarItem","Button","id","variant","ButtonVariant","plain","BellIcon","CogIcon","hiddenOnLg","spacingStyles","mr_0","Dropdown","isPlain","position","toggle","KebabToggle","onToggle","isOpen","DropdownItem","visibleOnMd","DropdownToggle","component","isDisabled","DropdownSeparator","bgImages","BackgroundImageSrc","lg","md","md2x","sm","sm2x","xl","xs","xs2x","filter","Header","PageHeader","logo","Brand","src","brandImg","alt","toolbar","avatar","Avatar","avatarImg","showNavToggle","Sidebar","PageSidebar","nav","Fragment","BackgroundImage","Page","header","sidebar","PageSection","PageSectionVariants","light","TextContent","Text","Gallery","gutter","Array","apply","map","x","i","GalleryItem","key","Card","CardBody","React","Component","__docgenInfo","description","displayName"],"mappings":"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","file":"component---react-core-src-demos-page-layout-examples-page-layout-expandable-nav-js-26e1234eb60a78eb5795.js","sourcesContent":["webpackJsonp([29149193096408],{\n\n/***/ 216:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactCore = __webpack_require__(4);\n\t\n\tvar _reactTokens = __webpack_require__(7);\n\t\n\tvar _accessibility = __webpack_require__(18);\n\t\n\tvar _accessibility2 = _interopRequireDefault(_accessibility);\n\t\n\tvar _spacing = __webpack_require__(17);\n\t\n\tvar _spacing2 = _interopRequireDefault(_spacing);\n\t\n\tvar _reactStyles = __webpack_require__(5);\n\t\n\tvar _reactIcons = __webpack_require__(16);\n\t\n\tvar _l_pfReverse164x = __webpack_require__(9);\n\t\n\tvar _l_pfReverse164x2 = _interopRequireDefault(_l_pfReverse164x);\n\t\n\tvar _img_avatar = __webpack_require__(8);\n\t\n\tvar _img_avatar2 = _interopRequireDefault(_img_avatar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PageLayoutExpandableNav = function (_React$Component) {\n\t  _inherits(PageLayoutExpandableNav, _React$Component);\n\t\n\t  function PageLayoutExpandableNav(props) {\n\t    _classCallCheck(this, PageLayoutExpandableNav);\n\t\n\t    // Set initial isNavOpen state based on window width\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.onDropdownToggle = function (isDropdownOpen) {\n\t      _this.setState({\n\t        isDropdownOpen: isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isDropdownOpen: !_this.state.isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownToggle = function (isKebabDropdownOpen) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: !_this.state.isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onNavSelect = function (result) {\n\t      _this.setState({\n\t        activeItem: result.itemId,\n\t        activeGroup: result.groupId\n\t      });\n\t    };\n\t\n\t    _this.onNavToggle = function () {\n\t      _this.setState({\n\t        isNavOpen: !_this.state.isNavOpen\n\t      });\n\t    };\n\t\n\t    var isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(_reactTokens.global_breakpoint_md.value, 10);\n\t    _this.state = {\n\t      isDropdownOpen: false,\n\t      isKebabDropdownOpen: false,\n\t      isNavOpen: isNavOpen,\n\t      activeGroup: 'grp-1',\n\t      activeItem: 'grp-1_itm-1'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  PageLayoutExpandableNav.prototype.render = function render() {\n\t    var _bgImages;\n\t\n\t    var _state = this.state,\n\t        isDropdownOpen = _state.isDropdownOpen,\n\t        isKebabDropdownOpen = _state.isKebabDropdownOpen,\n\t        activeItem = _state.activeItem,\n\t        isNavOpen = _state.isNavOpen,\n\t        activeGroup = _state.activeGroup;\n\t\n\t\n\t    var PageNav = _react2.default.createElement(\n\t      _reactCore.Nav,\n\t      { onSelect: this.onNavSelect, 'aria-label': 'Nav' },\n\t      _react2.default.createElement(\n\t        _reactCore.NavList,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.NavExpandable,\n\t          { title: 'System Panel', groupId: 'grp-1', isActive: activeGroup === 'grp-1', isExpanded: true },\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-1', groupId: 'grp-1', itemId: 'grp-1_itm-1', isActive: activeItem === 'grp-1_itm-1' },\n\t            'Overview'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-2', groupId: 'grp-1', itemId: 'grp-1_itm-2', isActive: activeItem === 'grp-1_itm-2' },\n\t            'Resource Usage'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-3', groupId: 'grp-1', itemId: 'grp-1_itm-3', isActive: activeItem === 'grp-1_itm-3' },\n\t            'Hypervisors'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-4', groupId: 'grp-1', itemId: 'grp-1_itm-4', isActive: activeItem === 'grp-1_itm-4' },\n\t            'Instances'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-5', groupId: 'grp-1', itemId: 'grp-1_itm-5', isActive: activeItem === 'grp-1_itm-5' },\n\t            'Volumes'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-6', groupId: 'grp-1', itemId: 'grp-1_itm-6', isActive: activeItem === 'grp-1_itm-6' },\n\t            'Network'\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavExpandable,\n\t          { title: 'Policy', groupId: 'grp-2', isActive: activeGroup === 'grp-2' },\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-4', groupId: 'grp-2', itemId: 'grp-2_itm-1', isActive: activeItem === 'grp-2_itm-1' },\n\t            'Subnav Link 1'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-5', groupId: 'grp-2', itemId: 'grp-2_itm-2', isActive: activeItem === 'grp-2_itm-2' },\n\t            'Subnav Link 2'\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavExpandable,\n\t          { title: 'Authentication', groupId: 'grp-3', isActive: activeGroup === 'grp-3' },\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-7', groupId: 'grp-3', itemId: 'grp-3_itm-1', isActive: activeItem === 'grp-3_itm-1' },\n\t            'Subnav Link 1'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-8', groupId: 'grp-3', itemId: 'grp-3_itm-2', isActive: activeItem === 'grp-3_itm-2' },\n\t            'Subnav Link 2'\n\t          )\n\t        )\n\t      )\n\t    );\n\t    var PageToolbar = _react2.default.createElement(\n\t      _reactCore.Toolbar,\n\t      null,\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnLg) },\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.BellIcon, null)\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.CogIcon, null)\n\t          )\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.hiddenOnLg, _spacing2.default.mr_0) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onKebabDropdownSelect,\n\t              toggle: _react2.default.createElement(_reactCore.KebabToggle, { onToggle: this.onKebabDropdownToggle }),\n\t              isOpen: isKebabDropdownOpen\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.BellIcon, null),\n\t              ' Notifications'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.CogIcon, null),\n\t              ' Settings'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnMd) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onDropdownSelect,\n\t              isOpen: isDropdownOpen,\n\t              toggle: _react2.default.createElement(\n\t                _reactCore.DropdownToggle,\n\t                { onToggle: this.onDropdownToggle },\n\t                'Kyle Baker'\n\t              )\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Action'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true },\n\t              'Disabled Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true, component: 'button' },\n\t              'Disabled Action'\n\t            ),\n\t            _react2.default.createElement(_reactCore.DropdownSeparator, null),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Separated Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Separated Action'\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t    var bgImages = (_bgImages = {}, _bgImages[_reactCore.BackgroundImageSrc.lg] = '/assets/images/pfbg_1200.jpg', _bgImages[_reactCore.BackgroundImageSrc.md] = '/assets/images/pfbg_992.jpg', _bgImages[_reactCore.BackgroundImageSrc.md2x] = '/assets/images/pfbg_992@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm] = '/assets/images/pfbg_768.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm2x] = '/assets/images/pfbg_768@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.xl] = '/assets/images/pfbg_2000.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs] = '/assets/images/pfbg_576.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs2x] = '/assets/images/pfbg_576@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.filter] = '/assets/images/background-filter.svg', _bgImages);\n\t\n\t    var Header = _react2.default.createElement(_reactCore.PageHeader, {\n\t      logo: _react2.default.createElement(_reactCore.Brand, { src: _l_pfReverse164x2.default, alt: 'Patternfly Logo' }),\n\t      toolbar: PageToolbar,\n\t      avatar: _react2.default.createElement(_reactCore.Avatar, { src: _img_avatar2.default, alt: 'Avatar image' }),\n\t      showNavToggle: true,\n\t      onNavToggle: this.onNavToggle\n\t    });\n\t    var Sidebar = _react2.default.createElement(_reactCore.PageSidebar, { nav: PageNav, isNavOpen: isNavOpen });\n\t\n\t    return _react2.default.createElement(\n\t      _react2.default.Fragment,\n\t      null,\n\t      _react2.default.createElement(_reactCore.BackgroundImage, { src: bgImages }),\n\t      _react2.default.createElement(\n\t        _reactCore.Page,\n\t        { header: Header, sidebar: Sidebar },\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          { variant: _reactCore.PageSectionVariants.light },\n\t          _react2.default.createElement(\n\t            _reactCore.TextContent,\n\t            null,\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'h1' },\n\t              'Main Title'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'p' },\n\t              'Body text should be Overpass Regular at 16px. It should have leading of 24px because ',\n\t              _react2.default.createElement('br', null),\n\t              'of it\\u2019s relative line height of 1.5.'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Gallery,\n\t            { gutter: 'md' },\n\t            Array.apply(0, Array(10)).map(function (x, i) {\n\t              return _react2.default.createElement(\n\t                _reactCore.GalleryItem,\n\t                { key: i },\n\t                _react2.default.createElement(\n\t                  _reactCore.Card,\n\t                  null,\n\t                  _react2.default.createElement(\n\t                    _reactCore.CardBody,\n\t                    null,\n\t                    'This is a card'\n\t                  )\n\t                )\n\t              );\n\t            })\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return PageLayoutExpandableNav;\n\t}(_react2.default.Component);\n\t\n\tPageLayoutExpandableNav.title = 'Using expandable navigation';\n\texports.default = PageLayoutExpandableNav;\n\tPageLayoutExpandableNav.__docgenInfo = {\n\t  'description': '',\n\t  'displayName': 'PageLayoutExpandableNav'\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---react-core-src-demos-page-layout-examples-page-layout-expandable-nav-js-26e1234eb60a78eb5795.js","import React from 'react';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport brandImg from './l_pf-reverse-164x11.png';\nimport avatarImg from './img_avatar.png';\n\nclass PageLayoutExpandableNav extends React.Component {\n  static title = 'Using expandable navigation';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      isNavOpen,\n      activeGroup: 'grp-1',\n      activeItem: 'grp-1_itm-1'\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId,\n      activeGroup: result.groupId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen, activeGroup } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList>\n          <NavExpandable title=\"System Panel\" groupId=\"grp-1\" isActive={activeGroup === 'grp-1'} isExpanded>\n            <NavItem to=\"#expandable-1\" groupId=\"grp-1\" itemId=\"grp-1_itm-1\" isActive={activeItem === 'grp-1_itm-1'}>\n              Overview\n            </NavItem>\n            <NavItem to=\"#expandable-2\" groupId=\"grp-1\" itemId=\"grp-1_itm-2\" isActive={activeItem === 'grp-1_itm-2'}>\n              Resource Usage\n            </NavItem>\n            <NavItem to=\"#expandable-3\" groupId=\"grp-1\" itemId=\"grp-1_itm-3\" isActive={activeItem === 'grp-1_itm-3'}>\n              Hypervisors\n            </NavItem>\n            <NavItem to=\"#expandable-4\" groupId=\"grp-1\" itemId=\"grp-1_itm-4\" isActive={activeItem === 'grp-1_itm-4'}>\n              Instances\n            </NavItem>\n            <NavItem to=\"#expandable-5\" groupId=\"grp-1\" itemId=\"grp-1_itm-5\" isActive={activeItem === 'grp-1_itm-5'}>\n              Volumes\n            </NavItem>\n            <NavItem to=\"#expandable-6\" groupId=\"grp-1\" itemId=\"grp-1_itm-6\" isActive={activeItem === 'grp-1_itm-6'}>\n              Network\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title=\"Policy\" groupId=\"grp-2\" isActive={activeGroup === 'grp-2'}>\n            <NavItem to=\"#expandable-4\" groupId=\"grp-2\" itemId=\"grp-2_itm-1\" isActive={activeItem === 'grp-2_itm-1'}>\n              Subnav Link 1\n            </NavItem>\n            <NavItem to=\"#expandable-5\" groupId=\"grp-2\" itemId=\"grp-2_itm-2\" isActive={activeItem === 'grp-2_itm-2'}>\n              Subnav Link 2\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title=\"Authentication\" groupId=\"grp-3\" isActive={activeGroup === 'grp-3'}>\n            <NavItem to=\"#expandable-7\" groupId=\"grp-3\" itemId=\"grp-3_itm-1\" isActive={activeItem === 'grp-3_itm-1'}>\n              Subnav Link 1\n            </NavItem>\n            <NavItem to=\"#expandable-8\" groupId=\"grp-3\" itemId=\"grp-3_itm-2\" isActive={activeItem === 'grp-3_itm-2'}>\n              Subnav Link 2\n            </NavItem>\n          </NavExpandable>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component=\"button\">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component=\"button\">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component=\"button\">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt=\"Avatar image\" />}\n        showNavToggle\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} sidebar={Sidebar}>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutExpandableNav;\n\n\n\n// WEBPACK FOOTER //\n// ../react-core/src/demos/PageLayout/examples/PageLayoutExpandableNav.js"],"sourceRoot":""}