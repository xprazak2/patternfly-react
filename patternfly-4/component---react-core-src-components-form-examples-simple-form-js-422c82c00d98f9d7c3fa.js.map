{"version":3,"sources":["webpack:///component---react-core-src-components-form-examples-simple-form-js-422c82c00d98f9d7c3fa.js","webpack:///../react-core/src/components/Form/examples/SimpleForm.js"],"names":["webpackJsonp","163","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","_reactCore","SimpleForm","_React$Component","_temp","_this","_ret","this","_len","arguments","length","args","Array","_key","apply","concat","state","value1","value2","value3","handleTextInputChange1","setState","handleTextInputChange2","handleTextInputChange3","render","_state","createElement","Form","FormGroup","label","isRequired","fieldId","helperText","TextInput","type","id","name","aria-describedby","onChange","placeholder","isInline","Radio","aria-label","Checkbox","ActionGroup","Toolbar","ToolbarGroup","Button","variant","React","Component","title","__docgenInfo","description","displayName"],"mappings":"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","file":"component---react-core-src-components-form-examples-simple-form-js-422c82c00d98f9d7c3fa.js","sourcesContent":["webpackJsonp([79970903238072],{\n\n/***/ 163:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactCore = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar SimpleForm = function (_React$Component) {\n\t  _inherits(SimpleForm, _React$Component);\n\t\n\t  function SimpleForm() {\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, SimpleForm);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n\t      value1: '',\n\t      value2: '',\n\t      value3: ''\n\t    }, _this.handleTextInputChange1 = function (value1) {\n\t      _this.setState({ value1: value1 });\n\t    }, _this.handleTextInputChange2 = function (value2) {\n\t      _this.setState({ value2: value2 });\n\t    }, _this.handleTextInputChange3 = function (value3) {\n\t      _this.setState({ value3: value3 });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  SimpleForm.prototype.render = function render() {\n\t    var _state = this.state,\n\t        value1 = _state.value1,\n\t        value2 = _state.value2,\n\t        value3 = _state.value3;\n\t\n\t\n\t    return _react2.default.createElement(\n\t      _reactCore.Form,\n\t      null,\n\t      _react2.default.createElement(\n\t        _reactCore.FormGroup,\n\t        {\n\t          label: 'required Name',\n\t          isRequired: true,\n\t          fieldId: 'simple-form-name',\n\t          helperText: 'Please provide your full name'\n\t        },\n\t        _react2.default.createElement(_reactCore.TextInput, {\n\t          isRequired: true,\n\t          type: 'text',\n\t          id: 'simple-form-name',\n\t          name: 'simple-form-name',\n\t          'aria-describedby': 'simple-form-name-helper-1',\n\t          value: value1,\n\t          onChange: this.handleTextInputChange1\n\t        })\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.FormGroup,\n\t        { label: 'required Email', isRequired: true, fieldId: 'simple-form-email' },\n\t        _react2.default.createElement(_reactCore.TextInput, {\n\t          isRequired: true,\n\t          type: 'email',\n\t          id: 'simple-form-email',\n\t          name: 'simple-form-email',\n\t          value: value2,\n\t          onChange: this.handleTextInputChange2\n\t        })\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.FormGroup,\n\t        { label: 'Phone number', fieldId: 'simple-form-number' },\n\t        _react2.default.createElement(_reactCore.TextInput, {\n\t          isRequired: true,\n\t          type: 'tel',\n\t          id: 'simple-form-number',\n\t          placeholder: '555-555-5555',\n\t          name: 'simple-form-number',\n\t          value: value3,\n\t          onChange: this.handleTextInputChange3\n\t        })\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.FormGroup,\n\t        { isInline: true, label: 'required How can we contact you?', isRequired: true, fieldId: 'inline-radio1' },\n\t        _react2.default.createElement(_reactCore.Radio, { id: 'inlineradio1', name: 'inlineradios', label: 'Email', 'aria-label': 'Email' }),\n\t        _react2.default.createElement(_reactCore.Radio, { id: 'inlineradio2', name: 'inlineradios', label: 'Phone', 'aria-label': 'Phone' }),\n\t        _react2.default.createElement(_reactCore.Radio, {\n\t          id: 'inlineradio3',\n\t          name: 'inlineradios',\n\t          label: 'Please don\\'t contact me',\n\t          'aria-label': 'Please don\\'t contact me'\n\t        })\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.FormGroup,\n\t        { fieldId: 'checkbox1' },\n\t        _react2.default.createElement(_reactCore.Checkbox, { label: 'I\\'d like updates via email', id: 'checkbox1', name: 'checkbox1', 'aria-label': 'Update via email' })\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.ActionGroup,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.Toolbar,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.ToolbarGroup,\n\t            null,\n\t            _react2.default.createElement(\n\t              _reactCore.Button,\n\t              { variant: 'primary' },\n\t              'Submit form'\n\t            )\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.ToolbarGroup,\n\t            null,\n\t            _react2.default.createElement(\n\t              _reactCore.Button,\n\t              { variant: 'secondary' },\n\t              'Cancel'\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return SimpleForm;\n\t}(_react2.default.Component);\n\t\n\tSimpleForm.title = 'Simple Form';\n\texports.default = SimpleForm;\n\tSimpleForm.__docgenInfo = {\n\t  'description': '',\n\t  'displayName': 'SimpleForm'\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---react-core-src-components-form-examples-simple-form-js-422c82c00d98f9d7c3fa.js","import React from 'react';\nimport { Form, FormGroup, TextInput, Checkbox, ActionGroup } from '@patternfly/react-core';\nimport { Toolbar, ToolbarGroup, Button, Radio } from '@patternfly/react-core';\n\nclass SimpleForm extends React.Component {\n  static title = 'Simple Form';\n\n  state = {\n    value1: '',\n    value2: '',\n    value3: ''\n  };\n\n  handleTextInputChange1 = value1 => {\n    this.setState({ value1 });\n  };\n\n  handleTextInputChange2 = value2 => {\n    this.setState({ value2 });\n  };\n\n  handleTextInputChange3 = value3 => {\n    this.setState({ value3 });\n  };\n\n  render() {\n    const { value1, value2, value3 } = this.state;\n\n    return (\n      <Form>\n        <FormGroup\n          label=\"required Name\"\n          isRequired\n          fieldId=\"simple-form-name\"\n          helperText=\"Please provide your full name\"\n        >\n          <TextInput\n            isRequired\n            type=\"text\"\n            id=\"simple-form-name\"\n            name=\"simple-form-name\"\n            aria-describedby=\"simple-form-name-helper-1\"\n            value={value1}\n            onChange={this.handleTextInputChange1}\n          />\n        </FormGroup>\n        <FormGroup label=\"required Email\" isRequired fieldId=\"simple-form-email\">\n          <TextInput\n            isRequired\n            type=\"email\"\n            id=\"simple-form-email\"\n            name=\"simple-form-email\"\n            value={value2}\n            onChange={this.handleTextInputChange2}\n          />\n        </FormGroup>\n        <FormGroup label=\"Phone number\" fieldId=\"simple-form-number\">\n          <TextInput\n            isRequired\n            type=\"tel\"\n            id=\"simple-form-number\"\n            placeholder=\"555-555-5555\"\n            name=\"simple-form-number\"\n            value={value3}\n            onChange={this.handleTextInputChange3}\n          />\n        </FormGroup>\n        <FormGroup isInline label=\"required How can we contact you?\" isRequired fieldId=\"inline-radio1\">\n          <Radio id=\"inlineradio1\" name=\"inlineradios\" label=\"Email\" aria-label=\"Email\" />\n          <Radio id=\"inlineradio2\" name=\"inlineradios\" label=\"Phone\" aria-label=\"Phone\" />\n          <Radio\n            id=\"inlineradio3\"\n            name=\"inlineradios\"\n            label=\"Please don't contact me\"\n            aria-label=\"Please don't contact me\"\n          />\n        </FormGroup>\n        <FormGroup fieldId=\"checkbox1\">\n          <Checkbox label=\"I'd like updates via email\" id=\"checkbox1\" name=\"checkbox1\" aria-label=\"Update via email\" />\n        </FormGroup>\n        <ActionGroup>\n          <Toolbar>\n            <ToolbarGroup>\n              <Button variant=\"primary\">Submit form</Button>\n            </ToolbarGroup>\n            <ToolbarGroup>\n              <Button variant=\"secondary\">Cancel</Button>\n            </ToolbarGroup>\n          </Toolbar>\n        </ActionGroup>\n      </Form>\n    );\n  }\n}\n\nexport default SimpleForm;\n\n\n\n// WEBPACK FOOTER //\n// ../react-core/src/components/Form/examples/SimpleForm.js"],"sourceRoot":""}