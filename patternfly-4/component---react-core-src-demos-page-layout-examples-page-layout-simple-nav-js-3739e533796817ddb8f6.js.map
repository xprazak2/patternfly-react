{"version":3,"sources":["webpack:///component---react-core-src-demos-page-layout-examples-page-layout-simple-nav-js-3739e533796817ddb8f6.js","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutSimpleNav.js?4d5e"],"names":["webpackJsonp","220","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","_reactCore","_reactTokens","_accessibility","_accessibility2","_spacing","_spacing2","_reactStyles","_reactIcons","_l_pfReverse164x","_l_pfReverse164x2","_img_avatar","_img_avatar2","PageLayoutSimpleNav","_React$Component","props","this","_this","onDropdownToggle","isDropdownOpen","setState","onDropdownSelect","event","state","onKebabDropdownToggle","isKebabDropdownOpen","onKebabDropdownSelect","onNavSelect","result","activeItem","itemId","onNavToggle","isNavOpen","window","innerWidth","parseInt","breakpointMd","render","_bgImages","_state","PageNav","createElement","Nav","onSelect","aria-label","NavList","variant","NavVariants","simple","NavItem","to","isActive","PageToolbar","Toolbar","ToolbarGroup","className","css","accessibleStyles","srOnly","visibleOnLg","ToolbarItem","Button","id","ButtonVariant","plain","BellIcon","CogIcon","hiddenOnLg","spacingStyles","mr_0","Dropdown","isPlain","position","toggle","KebabToggle","onToggle","isOpen","DropdownItem","visibleOnMd","DropdownToggle","component","isDisabled","DropdownSeparator","bgImages","BackgroundImageSrc","lg","md","md2x","sm","sm2x","xl","xs","xs2x","filter","Header","PageHeader","logo","Brand","src","brandImg","alt","toolbar","avatar","Avatar","avatarImg","showNavToggle","Sidebar","PageSidebar","nav","Fragment","BackgroundImage","Page","header","sidebar","PageSection","PageSectionVariants","light","TextContent","Text","Gallery","gutter","Array","apply","map","x","i","GalleryItem","key","Card","CardBody","React","Component","title","__docgenInfo","description","displayName"],"mappings":"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","file":"component---react-core-src-demos-page-layout-examples-page-layout-simple-nav-js-3739e533796817ddb8f6.js","sourcesContent":["webpackJsonp([225750548972774],{\n\n/***/ 220:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactCore = __webpack_require__(4);\n\t\n\tvar _reactTokens = __webpack_require__(7);\n\t\n\tvar _accessibility = __webpack_require__(18);\n\t\n\tvar _accessibility2 = _interopRequireDefault(_accessibility);\n\t\n\tvar _spacing = __webpack_require__(17);\n\t\n\tvar _spacing2 = _interopRequireDefault(_spacing);\n\t\n\tvar _reactStyles = __webpack_require__(5);\n\t\n\tvar _reactIcons = __webpack_require__(16);\n\t\n\tvar _l_pfReverse164x = __webpack_require__(9);\n\t\n\tvar _l_pfReverse164x2 = _interopRequireDefault(_l_pfReverse164x);\n\t\n\tvar _img_avatar = __webpack_require__(8);\n\t\n\tvar _img_avatar2 = _interopRequireDefault(_img_avatar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PageLayoutSimpleNav = function (_React$Component) {\n\t  _inherits(PageLayoutSimpleNav, _React$Component);\n\t\n\t  function PageLayoutSimpleNav(props) {\n\t    _classCallCheck(this, PageLayoutSimpleNav);\n\t\n\t    // Set initial isNavOpen state based on window width\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.onDropdownToggle = function (isDropdownOpen) {\n\t      _this.setState({\n\t        isDropdownOpen: isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isDropdownOpen: !_this.state.isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownToggle = function (isKebabDropdownOpen) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: !_this.state.isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onNavSelect = function (result) {\n\t      _this.setState({\n\t        activeItem: result.itemId\n\t      });\n\t    };\n\t\n\t    _this.onNavToggle = function () {\n\t      _this.setState({\n\t        isNavOpen: !_this.state.isNavOpen\n\t      });\n\t    };\n\t\n\t    var isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(_reactTokens.global_breakpoint_md.value, 10);\n\t    _this.state = {\n\t      isDropdownOpen: false,\n\t      isKebabDropdownOpen: false,\n\t      activeItem: 0,\n\t      isNavOpen: isNavOpen\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  PageLayoutSimpleNav.prototype.render = function render() {\n\t    var _bgImages;\n\t\n\t    var _state = this.state,\n\t        isDropdownOpen = _state.isDropdownOpen,\n\t        isKebabDropdownOpen = _state.isKebabDropdownOpen,\n\t        activeItem = _state.activeItem,\n\t        isNavOpen = _state.isNavOpen;\n\t\n\t\n\t    var PageNav = _react2.default.createElement(\n\t      _reactCore.Nav,\n\t      { onSelect: this.onNavSelect, 'aria-label': 'Nav' },\n\t      _react2.default.createElement(\n\t        _reactCore.NavList,\n\t        { variant: _reactCore.NavVariants.simple },\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link1', itemId: 0, isActive: activeItem === 0 },\n\t          'System Panel'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link2', itemId: 1, isActive: activeItem === 1 },\n\t          'Policy'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link3', itemId: 2, isActive: activeItem === 2 },\n\t          'Authentication'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link4', itemId: 3, isActive: activeItem === 3 },\n\t          'Network Services'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link5', itemId: 4, isActive: activeItem === 4 },\n\t          'Server'\n\t        )\n\t      )\n\t    );\n\t    var PageToolbar = _react2.default.createElement(\n\t      _reactCore.Toolbar,\n\t      null,\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnLg) },\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.BellIcon, null)\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.CogIcon, null)\n\t          )\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.hiddenOnLg, _spacing2.default.mr_0) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onKebabDropdownSelect,\n\t              toggle: _react2.default.createElement(_reactCore.KebabToggle, { onToggle: this.onKebabDropdownToggle }),\n\t              isOpen: isKebabDropdownOpen\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.BellIcon, null),\n\t              ' Notifications'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.CogIcon, null),\n\t              ' Settings'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnMd) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onDropdownSelect,\n\t              isOpen: isDropdownOpen,\n\t              toggle: _react2.default.createElement(\n\t                _reactCore.DropdownToggle,\n\t                { onToggle: this.onDropdownToggle },\n\t                'Kyle Baker'\n\t              )\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Action'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true },\n\t              'Disabled Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true, component: 'button' },\n\t              'Disabled Action'\n\t            ),\n\t            _react2.default.createElement(_reactCore.DropdownSeparator, null),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Separated Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Separated Action'\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t    var bgImages = (_bgImages = {}, _bgImages[_reactCore.BackgroundImageSrc.lg] = '/assets/images/pfbg_1200.jpg', _bgImages[_reactCore.BackgroundImageSrc.md] = '/assets/images/pfbg_992.jpg', _bgImages[_reactCore.BackgroundImageSrc.md2x] = '/assets/images/pfbg_992@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm] = '/assets/images/pfbg_768.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm2x] = '/assets/images/pfbg_768@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.xl] = '/assets/images/pfbg_2000.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs] = '/assets/images/pfbg_576.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs2x] = '/assets/images/pfbg_576@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.filter] = '/assets/images/background-filter.svg', _bgImages);\n\t\n\t    var Header = _react2.default.createElement(_reactCore.PageHeader, {\n\t      logo: _react2.default.createElement(_reactCore.Brand, { src: _l_pfReverse164x2.default, alt: 'Patternfly Logo' }),\n\t      toolbar: PageToolbar,\n\t      avatar: _react2.default.createElement(_reactCore.Avatar, { src: _img_avatar2.default, alt: 'Avatar image' }),\n\t      showNavToggle: true,\n\t      onNavToggle: this.onNavToggle\n\t    });\n\t    var Sidebar = _react2.default.createElement(_reactCore.PageSidebar, { nav: PageNav, isNavOpen: isNavOpen });\n\t\n\t    return _react2.default.createElement(\n\t      _react2.default.Fragment,\n\t      null,\n\t      _react2.default.createElement(_reactCore.BackgroundImage, { src: bgImages }),\n\t      _react2.default.createElement(\n\t        _reactCore.Page,\n\t        { header: Header, sidebar: Sidebar },\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          { variant: _reactCore.PageSectionVariants.light },\n\t          _react2.default.createElement(\n\t            _reactCore.TextContent,\n\t            null,\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'h1' },\n\t              'Main Title'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'p' },\n\t              'Body text should be Overpass Regular at 16px. It should have leading of 24px because ',\n\t              _react2.default.createElement('br', null),\n\t              'of it\\u2019s relative line height of 1.5.'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Gallery,\n\t            { gutter: 'md' },\n\t            Array.apply(0, Array(10)).map(function (x, i) {\n\t              return _react2.default.createElement(\n\t                _reactCore.GalleryItem,\n\t                { key: i },\n\t                _react2.default.createElement(\n\t                  _reactCore.Card,\n\t                  null,\n\t                  _react2.default.createElement(\n\t                    _reactCore.CardBody,\n\t                    null,\n\t                    'This is a card'\n\t                  )\n\t                )\n\t              );\n\t            })\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return PageLayoutSimpleNav;\n\t}(_react2.default.Component);\n\t\n\tPageLayoutSimpleNav.title = 'Using simple navigation';\n\texports.default = PageLayoutSimpleNav;\n\tPageLayoutSimpleNav.__docgenInfo = {\n\t  'description': '',\n\t  'displayName': 'PageLayoutSimpleNav'\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---react-core-src-demos-page-layout-examples-page-layout-simple-nav-js-3739e533796817ddb8f6.js","import React from 'react';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  NavVariants,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport brandImg from './l_pf-reverse-164x11.png';\nimport avatarImg from './img_avatar.png';\n\nclass PageLayoutSimpleNav extends React.Component {\n  static title = 'Using simple navigation';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 0,\n      isNavOpen\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList variant={NavVariants.simple}>\n          <NavItem to=\"#nav-link1\" itemId={0} isActive={activeItem === 0}>\n            System Panel\n          </NavItem>\n          <NavItem to=\"#nav-link2\" itemId={1} isActive={activeItem === 1}>\n            Policy\n          </NavItem>\n          <NavItem to=\"#nav-link3\" itemId={2} isActive={activeItem === 2}>\n            Authentication\n          </NavItem>\n          <NavItem to=\"#nav-link4\" itemId={3} isActive={activeItem === 3}>\n            Network Services\n          </NavItem>\n          <NavItem to=\"#nav-link5\" itemId={4} isActive={activeItem === 4}>\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component=\"button\">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component=\"button\">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component=\"button\">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt=\"Avatar image\" />}\n        showNavToggle\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} sidebar={Sidebar}>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutSimpleNav;\n\n\n\n// WEBPACK FOOTER //\n// ../react-core/src/demos/PageLayout/examples/PageLayoutSimpleNav.js"],"sourceRoot":""}