{"version":3,"sources":["webpack:///component---tmp-page-layout-demo-docs-js-b1791d08a639f612a337.js","webpack:///../react-core/src/demos/PageLayout/PageLayoutDemo.docs.js","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutDefaultNav.js?43d9","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutDefaultNav.js?7f34","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutExpandableNav.js?0b23","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutExpandableNav.js?aa23","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutGroupsNav.js?da51","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutGroupsNav.js","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNav.js?27a3","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNav.js","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNavCondensed.js?b8bd","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNavCondensed.js?6053","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutSimpleNav.js","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutSimpleNav.js?3fb3","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutVerticalNavCondensed.js?a7f6","webpack:///../react-core/src/demos/PageLayout/examples/PageLayoutVerticalNavCondensed.js","webpack:///./.tmp/PageLayoutDemo.docs.js"],"names":["webpackJsonp","814","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_PageLayoutDefaultNav","_PageLayoutDefaultNav2","_PageLayoutExpandableNav","_PageLayoutExpandableNav2","_PageLayoutGroupsNav","_PageLayoutGroupsNav2","_PageLayoutHorizontalNav","_PageLayoutHorizontalNav2","_PageLayoutSimpleNav","_PageLayoutSimpleNav2","_PageLayoutVerticalNavCondensed","_PageLayoutVerticalNavCondensed2","_PageLayoutHorizontalNavCondensed","_PageLayoutHorizontalNavCondensed2","title","examples","PageLayoutDefaultNav","PageLayoutExpandableNav","PageLayoutGroupsNav","PageLayoutHorizontalNav","PageLayoutSimpleNav","PageLayoutVerticalNavCondensed","PageLayoutHorizontalNavCondensed","fullPageOnly","215","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","_reactCore","_reactTokens","_accessibility","_accessibility2","_spacing","_spacing2","_reactStyles","_reactIcons","_l_pfReverse164x","_l_pfReverse164x2","_img_avatar","_img_avatar2","_React$Component","props","this","_this","onDropdownToggle","isDropdownOpen","setState","onDropdownSelect","event","state","onKebabDropdownToggle","isKebabDropdownOpen","onKebabDropdownSelect","onNavSelect","result","activeItem","itemId","onNavToggle","isNavOpen","window","innerWidth","parseInt","breakpointMd","render","_bgImages","_state","PageNav","createElement","Nav","onSelect","aria-label","NavList","NavItem","to","isActive","PageToolbar","Toolbar","ToolbarGroup","className","css","accessibleStyles","srOnly","visibleOnLg","ToolbarItem","Button","id","variant","ButtonVariant","plain","BellIcon","CogIcon","hiddenOnLg","spacingStyles","mr_0","Dropdown","isPlain","position","toggle","KebabToggle","onToggle","isOpen","DropdownItem","visibleOnMd","DropdownToggle","component","isDisabled","DropdownSeparator","bgImages","BackgroundImageSrc","lg","md","md2x","sm","sm2x","xl","xs","xs2x","filter","Header","PageHeader","logo","Brand","src","brandImg","alt","toolbar","avatar","Avatar","avatarImg","showNavToggle","Sidebar","PageSidebar","nav","Fragment","BackgroundImage","Page","header","sidebar","PageSection","PageSectionVariants","light","TextContent","Text","Gallery","gutter","Array","apply","map","x","i","GalleryItem","key","Card","CardBody","React","Component","__docgenInfo","description","displayName","660","216","activeGroup","groupId","NavExpandable","isExpanded","661","662","217","NavGroup","dark","darker","663","218","NavVariants","horizontal","topNav","219","useCondensed","664","220","simple","665","666","221","885","_extends","assign","target","arguments","length","source","hasOwnProperty","_PageLayoutDemoDocs","_PageLayoutDemoDocs2","_componentDocs","_componentDocs2","rawExamples","name","path","file","images","docs"],"mappings":"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","file":"component---tmp-page-layout-demo-docs-js-b1791d08a639f612a337.js","sourcesContent":["webpackJsonp([198770396674647,222168973538640,225750548972774,60332197092847,214514844767942,226254242365321,29149193096408,110634167994893],{\n\n/***/ 814:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _PageLayoutDefaultNav = __webpack_require__(215);\n\t\n\tvar _PageLayoutDefaultNav2 = _interopRequireDefault(_PageLayoutDefaultNav);\n\t\n\tvar _PageLayoutExpandableNav = __webpack_require__(216);\n\t\n\tvar _PageLayoutExpandableNav2 = _interopRequireDefault(_PageLayoutExpandableNav);\n\t\n\tvar _PageLayoutGroupsNav = __webpack_require__(217);\n\t\n\tvar _PageLayoutGroupsNav2 = _interopRequireDefault(_PageLayoutGroupsNav);\n\t\n\tvar _PageLayoutHorizontalNav = __webpack_require__(218);\n\t\n\tvar _PageLayoutHorizontalNav2 = _interopRequireDefault(_PageLayoutHorizontalNav);\n\t\n\tvar _PageLayoutSimpleNav = __webpack_require__(220);\n\t\n\tvar _PageLayoutSimpleNav2 = _interopRequireDefault(_PageLayoutSimpleNav);\n\t\n\tvar _PageLayoutVerticalNavCondensed = __webpack_require__(221);\n\t\n\tvar _PageLayoutVerticalNavCondensed2 = _interopRequireDefault(_PageLayoutVerticalNavCondensed);\n\t\n\tvar _PageLayoutHorizontalNavCondensed = __webpack_require__(219);\n\t\n\tvar _PageLayoutHorizontalNavCondensed2 = _interopRequireDefault(_PageLayoutHorizontalNavCondensed);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  title: 'Page Layout Demos',\n\t  examples: [_PageLayoutDefaultNav2.default, _PageLayoutExpandableNav2.default, _PageLayoutGroupsNav2.default, _PageLayoutHorizontalNav2.default, _PageLayoutSimpleNav2.default, _PageLayoutVerticalNavCondensed2.default, _PageLayoutHorizontalNavCondensed2.default],\n\t  fullPageOnly: true\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 215:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactCore = __webpack_require__(4);\n\t\n\tvar _reactTokens = __webpack_require__(7);\n\t\n\tvar _accessibility = __webpack_require__(18);\n\t\n\tvar _accessibility2 = _interopRequireDefault(_accessibility);\n\t\n\tvar _spacing = __webpack_require__(17);\n\t\n\tvar _spacing2 = _interopRequireDefault(_spacing);\n\t\n\tvar _reactStyles = __webpack_require__(5);\n\t\n\tvar _reactIcons = __webpack_require__(16);\n\t\n\tvar _l_pfReverse164x = __webpack_require__(9);\n\t\n\tvar _l_pfReverse164x2 = _interopRequireDefault(_l_pfReverse164x);\n\t\n\tvar _img_avatar = __webpack_require__(8);\n\t\n\tvar _img_avatar2 = _interopRequireDefault(_img_avatar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PageLayoutDefaultNav = function (_React$Component) {\n\t  _inherits(PageLayoutDefaultNav, _React$Component);\n\t\n\t  function PageLayoutDefaultNav(props) {\n\t    _classCallCheck(this, PageLayoutDefaultNav);\n\t\n\t    // Set initial isNavOpen state based on window width\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.onDropdownToggle = function (isDropdownOpen) {\n\t      _this.setState({\n\t        isDropdownOpen: isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isDropdownOpen: !_this.state.isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownToggle = function (isKebabDropdownOpen) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: !_this.state.isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onNavSelect = function (result) {\n\t      _this.setState({\n\t        activeItem: result.itemId\n\t      });\n\t    };\n\t\n\t    _this.onNavToggle = function () {\n\t      _this.setState({\n\t        isNavOpen: !_this.state.isNavOpen\n\t      });\n\t    };\n\t\n\t    var isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(_reactTokens.global_breakpoint_md.value, 10);\n\t    _this.state = {\n\t      isDropdownOpen: false,\n\t      isKebabDropdownOpen: false,\n\t      activeItem: 0,\n\t      isNavOpen: isNavOpen\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  PageLayoutDefaultNav.prototype.render = function render() {\n\t    var _bgImages;\n\t\n\t    var _state = this.state,\n\t        isDropdownOpen = _state.isDropdownOpen,\n\t        isKebabDropdownOpen = _state.isKebabDropdownOpen,\n\t        activeItem = _state.activeItem,\n\t        isNavOpen = _state.isNavOpen;\n\t\n\t\n\t    var PageNav = _react2.default.createElement(\n\t      _reactCore.Nav,\n\t      { onSelect: this.onNavSelect, 'aria-label': 'Nav' },\n\t      _react2.default.createElement(\n\t        _reactCore.NavList,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link1', itemId: 0, isActive: activeItem === 0 },\n\t          'System Panel'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link2', itemId: 1, isActive: activeItem === 1 },\n\t          'Policy'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link3', itemId: 2, isActive: activeItem === 2 },\n\t          'Authentication'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link4', itemId: 3, isActive: activeItem === 3 },\n\t          'Network Services'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link5', itemId: 4, isActive: activeItem === 4 },\n\t          'Server'\n\t        )\n\t      )\n\t    );\n\t    var PageToolbar = _react2.default.createElement(\n\t      _reactCore.Toolbar,\n\t      null,\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnLg) },\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.BellIcon, null)\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.CogIcon, null)\n\t          )\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.hiddenOnLg, _spacing2.default.mr_0) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onKebabDropdownSelect,\n\t              toggle: _react2.default.createElement(_reactCore.KebabToggle, { onToggle: this.onKebabDropdownToggle }),\n\t              isOpen: isKebabDropdownOpen\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.BellIcon, null),\n\t              ' Notifications'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.CogIcon, null),\n\t              ' Settings'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnMd) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onDropdownSelect,\n\t              isOpen: isDropdownOpen,\n\t              toggle: _react2.default.createElement(\n\t                _reactCore.DropdownToggle,\n\t                { onToggle: this.onDropdownToggle },\n\t                'Kyle Baker'\n\t              )\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Action'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true },\n\t              'Disabled Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true, component: 'button' },\n\t              'Disabled Action'\n\t            ),\n\t            _react2.default.createElement(_reactCore.DropdownSeparator, null),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Separated Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Separated Action'\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t    var bgImages = (_bgImages = {}, _bgImages[_reactCore.BackgroundImageSrc.lg] = '/assets/images/pfbg_1200.jpg', _bgImages[_reactCore.BackgroundImageSrc.md] = '/assets/images/pfbg_992.jpg', _bgImages[_reactCore.BackgroundImageSrc.md2x] = '/assets/images/pfbg_992@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm] = '/assets/images/pfbg_768.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm2x] = '/assets/images/pfbg_768@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.xl] = '/assets/images/pfbg_2000.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs] = '/assets/images/pfbg_576.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs2x] = '/assets/images/pfbg_576@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.filter] = '/assets/images/background-filter.svg', _bgImages);\n\t\n\t    var Header = _react2.default.createElement(_reactCore.PageHeader, {\n\t      logo: _react2.default.createElement(_reactCore.Brand, { src: _l_pfReverse164x2.default, alt: 'Patternfly Logo' }),\n\t      toolbar: PageToolbar,\n\t      avatar: _react2.default.createElement(_reactCore.Avatar, { src: _img_avatar2.default, alt: 'Avatar image' }),\n\t      showNavToggle: true,\n\t      onNavToggle: this.onNavToggle\n\t    });\n\t    var Sidebar = _react2.default.createElement(_reactCore.PageSidebar, { nav: PageNav, isNavOpen: isNavOpen });\n\t\n\t    return _react2.default.createElement(\n\t      _react2.default.Fragment,\n\t      null,\n\t      _react2.default.createElement(_reactCore.BackgroundImage, { src: bgImages }),\n\t      _react2.default.createElement(\n\t        _reactCore.Page,\n\t        { header: Header, sidebar: Sidebar },\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          { variant: _reactCore.PageSectionVariants.light },\n\t          _react2.default.createElement(\n\t            _reactCore.TextContent,\n\t            null,\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'h1' },\n\t              'Main Title'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'p' },\n\t              'Body text should be Overpass Regular at 16px. It should have leading of 24px because ',\n\t              _react2.default.createElement('br', null),\n\t              'of it\\u2019s relative line height of 1.5.'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Gallery,\n\t            { gutter: 'md' },\n\t            Array.apply(0, Array(10)).map(function (x, i) {\n\t              return _react2.default.createElement(\n\t                _reactCore.GalleryItem,\n\t                { key: i },\n\t                _react2.default.createElement(\n\t                  _reactCore.Card,\n\t                  null,\n\t                  _react2.default.createElement(\n\t                    _reactCore.CardBody,\n\t                    null,\n\t                    'This is a card'\n\t                  )\n\t                )\n\t              );\n\t            })\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return PageLayoutDefaultNav;\n\t}(_react2.default.Component);\n\t\n\tPageLayoutDefaultNav.title = 'Using default navigation';\n\texports.default = PageLayoutDefaultNav;\n\tPageLayoutDefaultNav.__docgenInfo = {\n\t  'description': '',\n\t  'displayName': 'PageLayoutDefaultNav'\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 660:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutDefaultNav extends React.Component {\\n  static title = 'Using default navigation';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0,\\n      isNavOpen\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavItem to=\\\"#nav-link1\\\" itemId={0} isActive={activeItem === 0}>\\n            System Panel\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link2\\\" itemId={1} isActive={activeItem === 1}>\\n            Policy\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link3\\\" itemId={2} isActive={activeItem === 2}>\\n            Authentication\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link4\\\" itemId={3} isActive={activeItem === 3}>\\n            Network Services\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link5\\\" itemId={4} isActive={activeItem === 4}>\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        showNavToggle\\n        onNavToggle={this.onNavToggle}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header} sidebar={Sidebar}>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery gutter=\\\"md\\\">\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutDefaultNav;\\n\"\n\n/***/ }),\n\n/***/ 216:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactCore = __webpack_require__(4);\n\t\n\tvar _reactTokens = __webpack_require__(7);\n\t\n\tvar _accessibility = __webpack_require__(18);\n\t\n\tvar _accessibility2 = _interopRequireDefault(_accessibility);\n\t\n\tvar _spacing = __webpack_require__(17);\n\t\n\tvar _spacing2 = _interopRequireDefault(_spacing);\n\t\n\tvar _reactStyles = __webpack_require__(5);\n\t\n\tvar _reactIcons = __webpack_require__(16);\n\t\n\tvar _l_pfReverse164x = __webpack_require__(9);\n\t\n\tvar _l_pfReverse164x2 = _interopRequireDefault(_l_pfReverse164x);\n\t\n\tvar _img_avatar = __webpack_require__(8);\n\t\n\tvar _img_avatar2 = _interopRequireDefault(_img_avatar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PageLayoutExpandableNav = function (_React$Component) {\n\t  _inherits(PageLayoutExpandableNav, _React$Component);\n\t\n\t  function PageLayoutExpandableNav(props) {\n\t    _classCallCheck(this, PageLayoutExpandableNav);\n\t\n\t    // Set initial isNavOpen state based on window width\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.onDropdownToggle = function (isDropdownOpen) {\n\t      _this.setState({\n\t        isDropdownOpen: isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isDropdownOpen: !_this.state.isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownToggle = function (isKebabDropdownOpen) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: !_this.state.isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onNavSelect = function (result) {\n\t      _this.setState({\n\t        activeItem: result.itemId,\n\t        activeGroup: result.groupId\n\t      });\n\t    };\n\t\n\t    _this.onNavToggle = function () {\n\t      _this.setState({\n\t        isNavOpen: !_this.state.isNavOpen\n\t      });\n\t    };\n\t\n\t    var isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(_reactTokens.global_breakpoint_md.value, 10);\n\t    _this.state = {\n\t      isDropdownOpen: false,\n\t      isKebabDropdownOpen: false,\n\t      isNavOpen: isNavOpen,\n\t      activeGroup: 'grp-1',\n\t      activeItem: 'grp-1_itm-1'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  PageLayoutExpandableNav.prototype.render = function render() {\n\t    var _bgImages;\n\t\n\t    var _state = this.state,\n\t        isDropdownOpen = _state.isDropdownOpen,\n\t        isKebabDropdownOpen = _state.isKebabDropdownOpen,\n\t        activeItem = _state.activeItem,\n\t        isNavOpen = _state.isNavOpen,\n\t        activeGroup = _state.activeGroup;\n\t\n\t\n\t    var PageNav = _react2.default.createElement(\n\t      _reactCore.Nav,\n\t      { onSelect: this.onNavSelect, 'aria-label': 'Nav' },\n\t      _react2.default.createElement(\n\t        _reactCore.NavList,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.NavExpandable,\n\t          { title: 'System Panel', groupId: 'grp-1', isActive: activeGroup === 'grp-1', isExpanded: true },\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-1', groupId: 'grp-1', itemId: 'grp-1_itm-1', isActive: activeItem === 'grp-1_itm-1' },\n\t            'Overview'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-2', groupId: 'grp-1', itemId: 'grp-1_itm-2', isActive: activeItem === 'grp-1_itm-2' },\n\t            'Resource Usage'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-3', groupId: 'grp-1', itemId: 'grp-1_itm-3', isActive: activeItem === 'grp-1_itm-3' },\n\t            'Hypervisors'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-4', groupId: 'grp-1', itemId: 'grp-1_itm-4', isActive: activeItem === 'grp-1_itm-4' },\n\t            'Instances'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-5', groupId: 'grp-1', itemId: 'grp-1_itm-5', isActive: activeItem === 'grp-1_itm-5' },\n\t            'Volumes'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-6', groupId: 'grp-1', itemId: 'grp-1_itm-6', isActive: activeItem === 'grp-1_itm-6' },\n\t            'Network'\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavExpandable,\n\t          { title: 'Policy', groupId: 'grp-2', isActive: activeGroup === 'grp-2' },\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-4', groupId: 'grp-2', itemId: 'grp-2_itm-1', isActive: activeItem === 'grp-2_itm-1' },\n\t            'Subnav Link 1'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-5', groupId: 'grp-2', itemId: 'grp-2_itm-2', isActive: activeItem === 'grp-2_itm-2' },\n\t            'Subnav Link 2'\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavExpandable,\n\t          { title: 'Authentication', groupId: 'grp-3', isActive: activeGroup === 'grp-3' },\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-7', groupId: 'grp-3', itemId: 'grp-3_itm-1', isActive: activeItem === 'grp-3_itm-1' },\n\t            'Subnav Link 1'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-8', groupId: 'grp-3', itemId: 'grp-3_itm-2', isActive: activeItem === 'grp-3_itm-2' },\n\t            'Subnav Link 2'\n\t          )\n\t        )\n\t      )\n\t    );\n\t    var PageToolbar = _react2.default.createElement(\n\t      _reactCore.Toolbar,\n\t      null,\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnLg) },\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.BellIcon, null)\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.CogIcon, null)\n\t          )\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.hiddenOnLg, _spacing2.default.mr_0) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onKebabDropdownSelect,\n\t              toggle: _react2.default.createElement(_reactCore.KebabToggle, { onToggle: this.onKebabDropdownToggle }),\n\t              isOpen: isKebabDropdownOpen\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.BellIcon, null),\n\t              ' Notifications'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.CogIcon, null),\n\t              ' Settings'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnMd) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onDropdownSelect,\n\t              isOpen: isDropdownOpen,\n\t              toggle: _react2.default.createElement(\n\t                _reactCore.DropdownToggle,\n\t                { onToggle: this.onDropdownToggle },\n\t                'Kyle Baker'\n\t              )\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Action'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true },\n\t              'Disabled Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true, component: 'button' },\n\t              'Disabled Action'\n\t            ),\n\t            _react2.default.createElement(_reactCore.DropdownSeparator, null),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Separated Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Separated Action'\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t    var bgImages = (_bgImages = {}, _bgImages[_reactCore.BackgroundImageSrc.lg] = '/assets/images/pfbg_1200.jpg', _bgImages[_reactCore.BackgroundImageSrc.md] = '/assets/images/pfbg_992.jpg', _bgImages[_reactCore.BackgroundImageSrc.md2x] = '/assets/images/pfbg_992@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm] = '/assets/images/pfbg_768.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm2x] = '/assets/images/pfbg_768@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.xl] = '/assets/images/pfbg_2000.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs] = '/assets/images/pfbg_576.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs2x] = '/assets/images/pfbg_576@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.filter] = '/assets/images/background-filter.svg', _bgImages);\n\t\n\t    var Header = _react2.default.createElement(_reactCore.PageHeader, {\n\t      logo: _react2.default.createElement(_reactCore.Brand, { src: _l_pfReverse164x2.default, alt: 'Patternfly Logo' }),\n\t      toolbar: PageToolbar,\n\t      avatar: _react2.default.createElement(_reactCore.Avatar, { src: _img_avatar2.default, alt: 'Avatar image' }),\n\t      showNavToggle: true,\n\t      onNavToggle: this.onNavToggle\n\t    });\n\t    var Sidebar = _react2.default.createElement(_reactCore.PageSidebar, { nav: PageNav, isNavOpen: isNavOpen });\n\t\n\t    return _react2.default.createElement(\n\t      _react2.default.Fragment,\n\t      null,\n\t      _react2.default.createElement(_reactCore.BackgroundImage, { src: bgImages }),\n\t      _react2.default.createElement(\n\t        _reactCore.Page,\n\t        { header: Header, sidebar: Sidebar },\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          { variant: _reactCore.PageSectionVariants.light },\n\t          _react2.default.createElement(\n\t            _reactCore.TextContent,\n\t            null,\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'h1' },\n\t              'Main Title'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'p' },\n\t              'Body text should be Overpass Regular at 16px. It should have leading of 24px because ',\n\t              _react2.default.createElement('br', null),\n\t              'of it\\u2019s relative line height of 1.5.'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Gallery,\n\t            { gutter: 'md' },\n\t            Array.apply(0, Array(10)).map(function (x, i) {\n\t              return _react2.default.createElement(\n\t                _reactCore.GalleryItem,\n\t                { key: i },\n\t                _react2.default.createElement(\n\t                  _reactCore.Card,\n\t                  null,\n\t                  _react2.default.createElement(\n\t                    _reactCore.CardBody,\n\t                    null,\n\t                    'This is a card'\n\t                  )\n\t                )\n\t              );\n\t            })\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return PageLayoutExpandableNav;\n\t}(_react2.default.Component);\n\t\n\tPageLayoutExpandableNav.title = 'Using expandable navigation';\n\texports.default = PageLayoutExpandableNav;\n\tPageLayoutExpandableNav.__docgenInfo = {\n\t  'description': '',\n\t  'displayName': 'PageLayoutExpandableNav'\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 661:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutExpandableNav extends React.Component {\\n  static title = 'Using expandable navigation';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      isNavOpen,\\n      activeGroup: 'grp-1',\\n      activeItem: 'grp-1_itm-1'\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId,\\n      activeGroup: result.groupId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen, activeGroup } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavExpandable title=\\\"System Panel\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n            <NavItem to=\\\"#expandable-1\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-1\\\" isActive={activeItem === 'grp-1_itm-1'}>\\n              Overview\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-2\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'}>\\n              Resource Usage\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-3\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'}>\\n              Hypervisors\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-4\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-4\\\" isActive={activeItem === 'grp-1_itm-4'}>\\n              Instances\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-5\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-5\\\" isActive={activeItem === 'grp-1_itm-5'}>\\n              Volumes\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-6\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-6\\\" isActive={activeItem === 'grp-1_itm-6'}>\\n              Network\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Policy\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'}>\\n            <NavItem to=\\\"#expandable-4\\\" groupId=\\\"grp-2\\\" itemId=\\\"grp-2_itm-1\\\" isActive={activeItem === 'grp-2_itm-1'}>\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-5\\\" groupId=\\\"grp-2\\\" itemId=\\\"grp-2_itm-2\\\" isActive={activeItem === 'grp-2_itm-2'}>\\n              Subnav Link 2\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Authentication\\\" groupId=\\\"grp-3\\\" isActive={activeGroup === 'grp-3'}>\\n            <NavItem to=\\\"#expandable-7\\\" groupId=\\\"grp-3\\\" itemId=\\\"grp-3_itm-1\\\" isActive={activeItem === 'grp-3_itm-1'}>\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-8\\\" groupId=\\\"grp-3\\\" itemId=\\\"grp-3_itm-2\\\" isActive={activeItem === 'grp-3_itm-2'}>\\n              Subnav Link 2\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        showNavToggle\\n        onNavToggle={this.onNavToggle}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header} sidebar={Sidebar}>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery gutter=\\\"md\\\">\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutExpandableNav;\\n\"\n\n/***/ }),\n\n/***/ 662:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  KebabToggle,\\n  Nav,\\n  NavGroup,\\n  NavItem,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutGroupsNav extends React.Component {\\n  static title = 'Using grouped navigation';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 'grp-1_itm-1',\\n      isNavOpen\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavGroup title=\\\"System Panel\\\">\\n          <NavItem to=\\\"#grouped-1\\\" itemId=\\\"grp-1_itm-1\\\" isActive={activeItem === 'grp-1_itm-1'}>\\n            Overview\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-2\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'}>\\n            Resource Usage\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-3\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'}>\\n            Hypervisors\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-4\\\" itemId=\\\"grp-1_itm-4\\\" isActive={activeItem === 'grp-1_itm-4'}>\\n            Instances\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-5\\\" itemId=\\\"grp-1_itm-5\\\" isActive={activeItem === 'grp-1_itm-5'}>\\n            Volumes\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-6\\\" itemId=\\\"grp-1_itm-6\\\" isActive={activeItem === 'grp-1_itm-6'}>\\n            Network\\n          </NavItem>\\n        </NavGroup>\\n        <NavGroup title=\\\"Policy\\\">\\n          <NavItem to=\\\"#grouped-7\\\" itemId=\\\"grp-2_itm-1\\\" isActive={activeItem === 'grp-2_itm-1'}>\\n            Hosts\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-8\\\" itemId=\\\"grp-2_itm-2\\\" isActive={activeItem === 'grp-2_itm-2'}>\\n            Virtual Machines\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-9\\\" itemId=\\\"grp-2_itm-3\\\" isActive={activeItem === 'grp-2_itm-3'}>\\n            Storage\\n          </NavItem>\\n        </NavGroup>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        showNavToggle\\n        onNavToggle={this.onNavToggle}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header} sidebar={Sidebar}>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection variant={PageSectionVariants.light}>Light</PageSection>\\n          <PageSection variant={PageSectionVariants.dark}>Dark</PageSection>\\n          <PageSection variant={PageSectionVariants.darker}>Darker</PageSection>\\n          <PageSection>Content</PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutGroupsNav;\\n\"\n\n/***/ }),\n\n/***/ 217:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactCore = __webpack_require__(4);\n\t\n\tvar _reactTokens = __webpack_require__(7);\n\t\n\tvar _accessibility = __webpack_require__(18);\n\t\n\tvar _accessibility2 = _interopRequireDefault(_accessibility);\n\t\n\tvar _spacing = __webpack_require__(17);\n\t\n\tvar _spacing2 = _interopRequireDefault(_spacing);\n\t\n\tvar _reactStyles = __webpack_require__(5);\n\t\n\tvar _reactIcons = __webpack_require__(16);\n\t\n\tvar _l_pfReverse164x = __webpack_require__(9);\n\t\n\tvar _l_pfReverse164x2 = _interopRequireDefault(_l_pfReverse164x);\n\t\n\tvar _img_avatar = __webpack_require__(8);\n\t\n\tvar _img_avatar2 = _interopRequireDefault(_img_avatar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PageLayoutGroupsNav = function (_React$Component) {\n\t  _inherits(PageLayoutGroupsNav, _React$Component);\n\t\n\t  function PageLayoutGroupsNav(props) {\n\t    _classCallCheck(this, PageLayoutGroupsNav);\n\t\n\t    // Set initial isNavOpen state based on window width\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.onDropdownToggle = function (isDropdownOpen) {\n\t      _this.setState({\n\t        isDropdownOpen: isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isDropdownOpen: !_this.state.isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownToggle = function (isKebabDropdownOpen) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: !_this.state.isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onNavSelect = function (result) {\n\t      _this.setState({\n\t        activeItem: result.itemId\n\t      });\n\t    };\n\t\n\t    _this.onNavToggle = function () {\n\t      _this.setState({\n\t        isNavOpen: !_this.state.isNavOpen\n\t      });\n\t    };\n\t\n\t    var isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(_reactTokens.global_breakpoint_md.value, 10);\n\t    _this.state = {\n\t      isDropdownOpen: false,\n\t      isKebabDropdownOpen: false,\n\t      activeItem: 'grp-1_itm-1',\n\t      isNavOpen: isNavOpen\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  PageLayoutGroupsNav.prototype.render = function render() {\n\t    var _bgImages;\n\t\n\t    var _state = this.state,\n\t        isDropdownOpen = _state.isDropdownOpen,\n\t        isKebabDropdownOpen = _state.isKebabDropdownOpen,\n\t        activeItem = _state.activeItem,\n\t        isNavOpen = _state.isNavOpen;\n\t\n\t\n\t    var PageNav = _react2.default.createElement(\n\t      _reactCore.Nav,\n\t      { onSelect: this.onNavSelect, 'aria-label': 'Nav' },\n\t      _react2.default.createElement(\n\t        _reactCore.NavGroup,\n\t        { title: 'System Panel' },\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#grouped-1', itemId: 'grp-1_itm-1', isActive: activeItem === 'grp-1_itm-1' },\n\t          'Overview'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#grouped-2', itemId: 'grp-1_itm-2', isActive: activeItem === 'grp-1_itm-2' },\n\t          'Resource Usage'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#grouped-3', itemId: 'grp-1_itm-3', isActive: activeItem === 'grp-1_itm-3' },\n\t          'Hypervisors'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#grouped-4', itemId: 'grp-1_itm-4', isActive: activeItem === 'grp-1_itm-4' },\n\t          'Instances'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#grouped-5', itemId: 'grp-1_itm-5', isActive: activeItem === 'grp-1_itm-5' },\n\t          'Volumes'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#grouped-6', itemId: 'grp-1_itm-6', isActive: activeItem === 'grp-1_itm-6' },\n\t          'Network'\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.NavGroup,\n\t        { title: 'Policy' },\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#grouped-7', itemId: 'grp-2_itm-1', isActive: activeItem === 'grp-2_itm-1' },\n\t          'Hosts'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#grouped-8', itemId: 'grp-2_itm-2', isActive: activeItem === 'grp-2_itm-2' },\n\t          'Virtual Machines'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#grouped-9', itemId: 'grp-2_itm-3', isActive: activeItem === 'grp-2_itm-3' },\n\t          'Storage'\n\t        )\n\t      )\n\t    );\n\t    var PageToolbar = _react2.default.createElement(\n\t      _reactCore.Toolbar,\n\t      null,\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnLg) },\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.BellIcon, null)\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.CogIcon, null)\n\t          )\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.hiddenOnLg, _spacing2.default.mr_0) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onKebabDropdownSelect,\n\t              toggle: _react2.default.createElement(_reactCore.KebabToggle, { onToggle: this.onKebabDropdownToggle }),\n\t              isOpen: isKebabDropdownOpen\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.BellIcon, null),\n\t              ' Notifications'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.CogIcon, null),\n\t              ' Settings'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnMd) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onDropdownSelect,\n\t              isOpen: isDropdownOpen,\n\t              toggle: _react2.default.createElement(\n\t                _reactCore.DropdownToggle,\n\t                { onToggle: this.onDropdownToggle },\n\t                'Kyle Baker'\n\t              )\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Action'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true },\n\t              'Disabled Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true, component: 'button' },\n\t              'Disabled Action'\n\t            ),\n\t            _react2.default.createElement(_reactCore.DropdownSeparator, null),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Separated Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Separated Action'\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t    var bgImages = (_bgImages = {}, _bgImages[_reactCore.BackgroundImageSrc.lg] = '/assets/images/pfbg_1200.jpg', _bgImages[_reactCore.BackgroundImageSrc.md] = '/assets/images/pfbg_992.jpg', _bgImages[_reactCore.BackgroundImageSrc.md2x] = '/assets/images/pfbg_992@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm] = '/assets/images/pfbg_768.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm2x] = '/assets/images/pfbg_768@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.xl] = '/assets/images/pfbg_2000.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs] = '/assets/images/pfbg_576.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs2x] = '/assets/images/pfbg_576@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.filter] = '/assets/images/background-filter.svg', _bgImages);\n\t\n\t    var Header = _react2.default.createElement(_reactCore.PageHeader, {\n\t      logo: _react2.default.createElement(_reactCore.Brand, { src: _l_pfReverse164x2.default, alt: 'Patternfly Logo' }),\n\t      toolbar: PageToolbar,\n\t      avatar: _react2.default.createElement(_reactCore.Avatar, { src: _img_avatar2.default, alt: 'Avatar image' }),\n\t      showNavToggle: true,\n\t      onNavToggle: this.onNavToggle\n\t    });\n\t    var Sidebar = _react2.default.createElement(_reactCore.PageSidebar, { nav: PageNav, isNavOpen: isNavOpen });\n\t\n\t    return _react2.default.createElement(\n\t      _react2.default.Fragment,\n\t      null,\n\t      _react2.default.createElement(_reactCore.BackgroundImage, { src: bgImages }),\n\t      _react2.default.createElement(\n\t        _reactCore.Page,\n\t        { header: Header, sidebar: Sidebar },\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          { variant: _reactCore.PageSectionVariants.light },\n\t          _react2.default.createElement(\n\t            _reactCore.TextContent,\n\t            null,\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'h1' },\n\t              'Main Title'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'p' },\n\t              'Body text should be Overpass Regular at 16px. It should have leading of 24px because ',\n\t              _react2.default.createElement('br', null),\n\t              'of it\\u2019s relative line height of 1.5.'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          { variant: _reactCore.PageSectionVariants.light },\n\t          'Light'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          { variant: _reactCore.PageSectionVariants.dark },\n\t          'Dark'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          { variant: _reactCore.PageSectionVariants.darker },\n\t          'Darker'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          null,\n\t          'Content'\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return PageLayoutGroupsNav;\n\t}(_react2.default.Component);\n\t\n\tPageLayoutGroupsNav.title = 'Using grouped navigation';\n\texports.default = PageLayoutGroupsNav;\n\tPageLayoutGroupsNav.__docgenInfo = {\n\t  'description': '',\n\t  'displayName': 'PageLayoutGroupsNav'\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 663:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  NavVariants,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutHorizontalNav extends React.Component {\\n  static title = 'Using horizontal navigation';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0,\\n      isNavOpen\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList variant={NavVariants.horizontal}>\\n          <NavItem to=\\\"#nav-link1\\\" itemId={0} isActive={activeItem === 0}>\\n            System Panel\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link2\\\" itemId={1} isActive={activeItem === 1}>\\n            Policy\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link3\\\" itemId={2} isActive={activeItem === 2}>\\n            Authentication\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link4\\\" itemId={3} isActive={activeItem === 3}>\\n            Network Services\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link5\\\" itemId={4} isActive={activeItem === 4}>\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        topNav={PageNav}\\n      />\\n    );\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header}>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery gutter=\\\"md\\\">\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutHorizontalNav;\\n\"\n\n/***/ }),\n\n/***/ 218:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactCore = __webpack_require__(4);\n\t\n\tvar _reactTokens = __webpack_require__(7);\n\t\n\tvar _accessibility = __webpack_require__(18);\n\t\n\tvar _accessibility2 = _interopRequireDefault(_accessibility);\n\t\n\tvar _spacing = __webpack_require__(17);\n\t\n\tvar _spacing2 = _interopRequireDefault(_spacing);\n\t\n\tvar _reactStyles = __webpack_require__(5);\n\t\n\tvar _reactIcons = __webpack_require__(16);\n\t\n\tvar _l_pfReverse164x = __webpack_require__(9);\n\t\n\tvar _l_pfReverse164x2 = _interopRequireDefault(_l_pfReverse164x);\n\t\n\tvar _img_avatar = __webpack_require__(8);\n\t\n\tvar _img_avatar2 = _interopRequireDefault(_img_avatar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PageLayoutHorizontalNav = function (_React$Component) {\n\t  _inherits(PageLayoutHorizontalNav, _React$Component);\n\t\n\t  function PageLayoutHorizontalNav(props) {\n\t    _classCallCheck(this, PageLayoutHorizontalNav);\n\t\n\t    // Set initial isNavOpen state based on window width\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.onDropdownToggle = function (isDropdownOpen) {\n\t      _this.setState({\n\t        isDropdownOpen: isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isDropdownOpen: !_this.state.isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownToggle = function (isKebabDropdownOpen) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: !_this.state.isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onNavSelect = function (result) {\n\t      _this.setState({\n\t        activeItem: result.itemId\n\t      });\n\t    };\n\t\n\t    _this.onNavToggle = function () {\n\t      _this.setState({\n\t        isNavOpen: !_this.state.isNavOpen\n\t      });\n\t    };\n\t\n\t    var isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(_reactTokens.global_breakpoint_md.value, 10);\n\t    _this.state = {\n\t      isDropdownOpen: false,\n\t      isKebabDropdownOpen: false,\n\t      activeItem: 0,\n\t      isNavOpen: isNavOpen\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  PageLayoutHorizontalNav.prototype.render = function render() {\n\t    var _bgImages;\n\t\n\t    var _state = this.state,\n\t        isDropdownOpen = _state.isDropdownOpen,\n\t        isKebabDropdownOpen = _state.isKebabDropdownOpen,\n\t        activeItem = _state.activeItem,\n\t        isNavOpen = _state.isNavOpen;\n\t\n\t\n\t    var PageNav = _react2.default.createElement(\n\t      _reactCore.Nav,\n\t      { onSelect: this.onNavSelect, 'aria-label': 'Nav' },\n\t      _react2.default.createElement(\n\t        _reactCore.NavList,\n\t        { variant: _reactCore.NavVariants.horizontal },\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link1', itemId: 0, isActive: activeItem === 0 },\n\t          'System Panel'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link2', itemId: 1, isActive: activeItem === 1 },\n\t          'Policy'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link3', itemId: 2, isActive: activeItem === 2 },\n\t          'Authentication'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link4', itemId: 3, isActive: activeItem === 3 },\n\t          'Network Services'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link5', itemId: 4, isActive: activeItem === 4 },\n\t          'Server'\n\t        )\n\t      )\n\t    );\n\t    var PageToolbar = _react2.default.createElement(\n\t      _reactCore.Toolbar,\n\t      null,\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnLg) },\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.BellIcon, null)\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.CogIcon, null)\n\t          )\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.hiddenOnLg, _spacing2.default.mr_0) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onKebabDropdownSelect,\n\t              toggle: _react2.default.createElement(_reactCore.KebabToggle, { onToggle: this.onKebabDropdownToggle }),\n\t              isOpen: isKebabDropdownOpen\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.BellIcon, null),\n\t              ' Notifications'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.CogIcon, null),\n\t              ' Settings'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnMd) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onDropdownSelect,\n\t              isOpen: isDropdownOpen,\n\t              toggle: _react2.default.createElement(\n\t                _reactCore.DropdownToggle,\n\t                { onToggle: this.onDropdownToggle },\n\t                'Kyle Baker'\n\t              )\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Action'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true },\n\t              'Disabled Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true, component: 'button' },\n\t              'Disabled Action'\n\t            ),\n\t            _react2.default.createElement(_reactCore.DropdownSeparator, null),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Separated Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Separated Action'\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t    var bgImages = (_bgImages = {}, _bgImages[_reactCore.BackgroundImageSrc.lg] = '/assets/images/pfbg_1200.jpg', _bgImages[_reactCore.BackgroundImageSrc.md] = '/assets/images/pfbg_992.jpg', _bgImages[_reactCore.BackgroundImageSrc.md2x] = '/assets/images/pfbg_992@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm] = '/assets/images/pfbg_768.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm2x] = '/assets/images/pfbg_768@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.xl] = '/assets/images/pfbg_2000.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs] = '/assets/images/pfbg_576.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs2x] = '/assets/images/pfbg_576@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.filter] = '/assets/images/background-filter.svg', _bgImages);\n\t\n\t    var Header = _react2.default.createElement(_reactCore.PageHeader, {\n\t      logo: _react2.default.createElement(_reactCore.Brand, { src: _l_pfReverse164x2.default, alt: 'Patternfly Logo' }),\n\t      toolbar: PageToolbar,\n\t      avatar: _react2.default.createElement(_reactCore.Avatar, { src: _img_avatar2.default, alt: 'Avatar image' }),\n\t      topNav: PageNav\n\t    });\n\t\n\t    return _react2.default.createElement(\n\t      _react2.default.Fragment,\n\t      null,\n\t      _react2.default.createElement(_reactCore.BackgroundImage, { src: bgImages }),\n\t      _react2.default.createElement(\n\t        _reactCore.Page,\n\t        { header: Header },\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          { variant: _reactCore.PageSectionVariants.light },\n\t          _react2.default.createElement(\n\t            _reactCore.TextContent,\n\t            null,\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'h1' },\n\t              'Main Title'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'p' },\n\t              'Body text should be Overpass Regular at 16px. It should have leading of 24px because ',\n\t              _react2.default.createElement('br', null),\n\t              'of it\\u2019s relative line height of 1.5.'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Gallery,\n\t            { gutter: 'md' },\n\t            Array.apply(0, Array(10)).map(function (x, i) {\n\t              return _react2.default.createElement(\n\t                _reactCore.GalleryItem,\n\t                { key: i },\n\t                _react2.default.createElement(\n\t                  _reactCore.Card,\n\t                  null,\n\t                  _react2.default.createElement(\n\t                    _reactCore.CardBody,\n\t                    null,\n\t                    'This is a card'\n\t                  )\n\t                )\n\t              );\n\t            })\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return PageLayoutHorizontalNav;\n\t}(_react2.default.Component);\n\t\n\tPageLayoutHorizontalNav.title = 'Using horizontal navigation';\n\texports.default = PageLayoutHorizontalNav;\n\tPageLayoutHorizontalNav.__docgenInfo = {\n\t  'description': '',\n\t  'displayName': 'PageLayoutHorizontalNav'\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 219:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactCore = __webpack_require__(4);\n\t\n\tvar _reactTokens = __webpack_require__(7);\n\t\n\tvar _accessibility = __webpack_require__(18);\n\t\n\tvar _accessibility2 = _interopRequireDefault(_accessibility);\n\t\n\tvar _spacing = __webpack_require__(17);\n\t\n\tvar _spacing2 = _interopRequireDefault(_spacing);\n\t\n\tvar _reactStyles = __webpack_require__(5);\n\t\n\tvar _reactIcons = __webpack_require__(16);\n\t\n\tvar _l_pfReverse164x = __webpack_require__(9);\n\t\n\tvar _l_pfReverse164x2 = _interopRequireDefault(_l_pfReverse164x);\n\t\n\tvar _img_avatar = __webpack_require__(8);\n\t\n\tvar _img_avatar2 = _interopRequireDefault(_img_avatar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PageLayoutHorizontalNavCondensed = function (_React$Component) {\n\t  _inherits(PageLayoutHorizontalNavCondensed, _React$Component);\n\t\n\t  function PageLayoutHorizontalNavCondensed(props) {\n\t    _classCallCheck(this, PageLayoutHorizontalNavCondensed);\n\t\n\t    // Set initial isNavOpen state based on window width\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.onDropdownToggle = function (isDropdownOpen) {\n\t      _this.setState({\n\t        isDropdownOpen: isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isDropdownOpen: !_this.state.isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownToggle = function (isKebabDropdownOpen) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: !_this.state.isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onNavSelect = function (result) {\n\t      _this.setState({\n\t        activeItem: result.itemId\n\t      });\n\t    };\n\t\n\t    _this.onNavToggle = function () {\n\t      _this.setState({\n\t        isNavOpen: !_this.state.isNavOpen\n\t      });\n\t    };\n\t\n\t    var isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(_reactTokens.global_breakpoint_md.value, 10);\n\t    _this.state = {\n\t      isDropdownOpen: false,\n\t      isKebabDropdownOpen: false,\n\t      activeItem: 0,\n\t      isNavOpen: isNavOpen\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  PageLayoutHorizontalNavCondensed.prototype.render = function render() {\n\t    var _bgImages;\n\t\n\t    var _state = this.state,\n\t        isDropdownOpen = _state.isDropdownOpen,\n\t        isKebabDropdownOpen = _state.isKebabDropdownOpen,\n\t        activeItem = _state.activeItem,\n\t        isNavOpen = _state.isNavOpen;\n\t\n\t\n\t    var PageNav = _react2.default.createElement(\n\t      _reactCore.Nav,\n\t      { onSelect: this.onNavSelect, 'aria-label': 'Nav' },\n\t      _react2.default.createElement(\n\t        _reactCore.NavList,\n\t        { variant: _reactCore.NavVariants.horizontal },\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link1', itemId: 0, isActive: activeItem === 0 },\n\t          'System Panel'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link2', itemId: 1, isActive: activeItem === 1 },\n\t          'Policy'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link3', itemId: 2, isActive: activeItem === 2 },\n\t          'Authentication'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link4', itemId: 3, isActive: activeItem === 3 },\n\t          'Network Services'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link5', itemId: 4, isActive: activeItem === 4 },\n\t          'Server'\n\t        )\n\t      )\n\t    );\n\t    var PageToolbar = _react2.default.createElement(\n\t      _reactCore.Toolbar,\n\t      null,\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnLg) },\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.BellIcon, null)\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.CogIcon, null)\n\t          )\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.hiddenOnLg, _spacing2.default.mr_0) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onKebabDropdownSelect,\n\t              toggle: _react2.default.createElement(_reactCore.KebabToggle, { onToggle: this.onKebabDropdownToggle }),\n\t              isOpen: isKebabDropdownOpen\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.BellIcon, null),\n\t              ' Notifications'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.CogIcon, null),\n\t              ' Settings'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnMd) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onDropdownSelect,\n\t              isOpen: isDropdownOpen,\n\t              toggle: _react2.default.createElement(\n\t                _reactCore.DropdownToggle,\n\t                { onToggle: this.onDropdownToggle },\n\t                'Kyle Baker'\n\t              )\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Action'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true },\n\t              'Disabled Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true, component: 'button' },\n\t              'Disabled Action'\n\t            ),\n\t            _react2.default.createElement(_reactCore.DropdownSeparator, null),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Separated Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Separated Action'\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t    var bgImages = (_bgImages = {}, _bgImages[_reactCore.BackgroundImageSrc.lg] = '/assets/images/pfbg_1200.jpg', _bgImages[_reactCore.BackgroundImageSrc.md] = '/assets/images/pfbg_992.jpg', _bgImages[_reactCore.BackgroundImageSrc.md2x] = '/assets/images/pfbg_992@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm] = '/assets/images/pfbg_768.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm2x] = '/assets/images/pfbg_768@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.xl] = '/assets/images/pfbg_2000.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs] = '/assets/images/pfbg_576.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs2x] = '/assets/images/pfbg_576@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.filter] = '/assets/images/background-filter.svg', _bgImages);\n\t\n\t    var Header = _react2.default.createElement(_reactCore.PageHeader, {\n\t      logo: _react2.default.createElement(_reactCore.Brand, { src: _l_pfReverse164x2.default, alt: 'Patternfly Logo' }),\n\t      toolbar: PageToolbar,\n\t      avatar: _react2.default.createElement(_reactCore.Avatar, { src: _img_avatar2.default, alt: 'Avatar image' }),\n\t      topNav: PageNav\n\t    });\n\t\n\t    return _react2.default.createElement(\n\t      _react2.default.Fragment,\n\t      null,\n\t      _react2.default.createElement(_reactCore.BackgroundImage, { src: bgImages }),\n\t      _react2.default.createElement(\n\t        _reactCore.Page,\n\t        { header: Header, useCondensed: true },\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          { variant: _reactCore.PageSectionVariants.light },\n\t          _react2.default.createElement(\n\t            _reactCore.TextContent,\n\t            null,\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'h1' },\n\t              'Main Title'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'p' },\n\t              'Body text should be Overpass Regular at 16px. It should have leading of 24px because ',\n\t              _react2.default.createElement('br', null),\n\t              'of it\\u2019s relative line height of 1.5.'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Gallery,\n\t            { gutter: 'md' },\n\t            Array.apply(0, Array(50)).map(function (x, i) {\n\t              return _react2.default.createElement(\n\t                _reactCore.GalleryItem,\n\t                { key: i },\n\t                _react2.default.createElement(\n\t                  _reactCore.Card,\n\t                  null,\n\t                  _react2.default.createElement(\n\t                    _reactCore.CardBody,\n\t                    null,\n\t                    'This is a card'\n\t                  )\n\t                )\n\t              );\n\t            })\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return PageLayoutHorizontalNavCondensed;\n\t}(_react2.default.Component);\n\t\n\tPageLayoutHorizontalNavCondensed.title = 'Using horizontal navigation with condensed header';\n\texports.default = PageLayoutHorizontalNavCondensed;\n\tPageLayoutHorizontalNavCondensed.__docgenInfo = {\n\t  'description': '',\n\t  'displayName': 'PageLayoutHorizontalNavCondensed'\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 664:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  NavVariants,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutHorizontalNavCondensed extends React.Component {\\n  static title = 'Using horizontal navigation with condensed header';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0,\\n      isNavOpen\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList variant={NavVariants.horizontal}>\\n          <NavItem to=\\\"#nav-link1\\\" itemId={0} isActive={activeItem === 0}>\\n            System Panel\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link2\\\" itemId={1} isActive={activeItem === 1}>\\n            Policy\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link3\\\" itemId={2} isActive={activeItem === 2}>\\n            Authentication\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link4\\\" itemId={3} isActive={activeItem === 3}>\\n            Network Services\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link5\\\" itemId={4} isActive={activeItem === 4}>\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        topNav={PageNav}\\n      />\\n    );\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header} useCondensed>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery gutter=\\\"md\\\">\\n              {Array.apply(0, Array(50)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutHorizontalNavCondensed;\\n\"\n\n/***/ }),\n\n/***/ 220:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactCore = __webpack_require__(4);\n\t\n\tvar _reactTokens = __webpack_require__(7);\n\t\n\tvar _accessibility = __webpack_require__(18);\n\t\n\tvar _accessibility2 = _interopRequireDefault(_accessibility);\n\t\n\tvar _spacing = __webpack_require__(17);\n\t\n\tvar _spacing2 = _interopRequireDefault(_spacing);\n\t\n\tvar _reactStyles = __webpack_require__(5);\n\t\n\tvar _reactIcons = __webpack_require__(16);\n\t\n\tvar _l_pfReverse164x = __webpack_require__(9);\n\t\n\tvar _l_pfReverse164x2 = _interopRequireDefault(_l_pfReverse164x);\n\t\n\tvar _img_avatar = __webpack_require__(8);\n\t\n\tvar _img_avatar2 = _interopRequireDefault(_img_avatar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PageLayoutSimpleNav = function (_React$Component) {\n\t  _inherits(PageLayoutSimpleNav, _React$Component);\n\t\n\t  function PageLayoutSimpleNav(props) {\n\t    _classCallCheck(this, PageLayoutSimpleNav);\n\t\n\t    // Set initial isNavOpen state based on window width\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.onDropdownToggle = function (isDropdownOpen) {\n\t      _this.setState({\n\t        isDropdownOpen: isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isDropdownOpen: !_this.state.isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownToggle = function (isKebabDropdownOpen) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: !_this.state.isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onNavSelect = function (result) {\n\t      _this.setState({\n\t        activeItem: result.itemId\n\t      });\n\t    };\n\t\n\t    _this.onNavToggle = function () {\n\t      _this.setState({\n\t        isNavOpen: !_this.state.isNavOpen\n\t      });\n\t    };\n\t\n\t    var isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(_reactTokens.global_breakpoint_md.value, 10);\n\t    _this.state = {\n\t      isDropdownOpen: false,\n\t      isKebabDropdownOpen: false,\n\t      activeItem: 0,\n\t      isNavOpen: isNavOpen\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  PageLayoutSimpleNav.prototype.render = function render() {\n\t    var _bgImages;\n\t\n\t    var _state = this.state,\n\t        isDropdownOpen = _state.isDropdownOpen,\n\t        isKebabDropdownOpen = _state.isKebabDropdownOpen,\n\t        activeItem = _state.activeItem,\n\t        isNavOpen = _state.isNavOpen;\n\t\n\t\n\t    var PageNav = _react2.default.createElement(\n\t      _reactCore.Nav,\n\t      { onSelect: this.onNavSelect, 'aria-label': 'Nav' },\n\t      _react2.default.createElement(\n\t        _reactCore.NavList,\n\t        { variant: _reactCore.NavVariants.simple },\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link1', itemId: 0, isActive: activeItem === 0 },\n\t          'System Panel'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link2', itemId: 1, isActive: activeItem === 1 },\n\t          'Policy'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link3', itemId: 2, isActive: activeItem === 2 },\n\t          'Authentication'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link4', itemId: 3, isActive: activeItem === 3 },\n\t          'Network Services'\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavItem,\n\t          { to: '#nav-link5', itemId: 4, isActive: activeItem === 4 },\n\t          'Server'\n\t        )\n\t      )\n\t    );\n\t    var PageToolbar = _react2.default.createElement(\n\t      _reactCore.Toolbar,\n\t      null,\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnLg) },\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.BellIcon, null)\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.CogIcon, null)\n\t          )\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.hiddenOnLg, _spacing2.default.mr_0) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onKebabDropdownSelect,\n\t              toggle: _react2.default.createElement(_reactCore.KebabToggle, { onToggle: this.onKebabDropdownToggle }),\n\t              isOpen: isKebabDropdownOpen\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.BellIcon, null),\n\t              ' Notifications'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.CogIcon, null),\n\t              ' Settings'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnMd) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onDropdownSelect,\n\t              isOpen: isDropdownOpen,\n\t              toggle: _react2.default.createElement(\n\t                _reactCore.DropdownToggle,\n\t                { onToggle: this.onDropdownToggle },\n\t                'Kyle Baker'\n\t              )\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Action'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true },\n\t              'Disabled Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true, component: 'button' },\n\t              'Disabled Action'\n\t            ),\n\t            _react2.default.createElement(_reactCore.DropdownSeparator, null),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Separated Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Separated Action'\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t    var bgImages = (_bgImages = {}, _bgImages[_reactCore.BackgroundImageSrc.lg] = '/assets/images/pfbg_1200.jpg', _bgImages[_reactCore.BackgroundImageSrc.md] = '/assets/images/pfbg_992.jpg', _bgImages[_reactCore.BackgroundImageSrc.md2x] = '/assets/images/pfbg_992@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm] = '/assets/images/pfbg_768.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm2x] = '/assets/images/pfbg_768@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.xl] = '/assets/images/pfbg_2000.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs] = '/assets/images/pfbg_576.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs2x] = '/assets/images/pfbg_576@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.filter] = '/assets/images/background-filter.svg', _bgImages);\n\t\n\t    var Header = _react2.default.createElement(_reactCore.PageHeader, {\n\t      logo: _react2.default.createElement(_reactCore.Brand, { src: _l_pfReverse164x2.default, alt: 'Patternfly Logo' }),\n\t      toolbar: PageToolbar,\n\t      avatar: _react2.default.createElement(_reactCore.Avatar, { src: _img_avatar2.default, alt: 'Avatar image' }),\n\t      showNavToggle: true,\n\t      onNavToggle: this.onNavToggle\n\t    });\n\t    var Sidebar = _react2.default.createElement(_reactCore.PageSidebar, { nav: PageNav, isNavOpen: isNavOpen });\n\t\n\t    return _react2.default.createElement(\n\t      _react2.default.Fragment,\n\t      null,\n\t      _react2.default.createElement(_reactCore.BackgroundImage, { src: bgImages }),\n\t      _react2.default.createElement(\n\t        _reactCore.Page,\n\t        { header: Header, sidebar: Sidebar },\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          { variant: _reactCore.PageSectionVariants.light },\n\t          _react2.default.createElement(\n\t            _reactCore.TextContent,\n\t            null,\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'h1' },\n\t              'Main Title'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'p' },\n\t              'Body text should be Overpass Regular at 16px. It should have leading of 24px because ',\n\t              _react2.default.createElement('br', null),\n\t              'of it\\u2019s relative line height of 1.5.'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Gallery,\n\t            { gutter: 'md' },\n\t            Array.apply(0, Array(10)).map(function (x, i) {\n\t              return _react2.default.createElement(\n\t                _reactCore.GalleryItem,\n\t                { key: i },\n\t                _react2.default.createElement(\n\t                  _reactCore.Card,\n\t                  null,\n\t                  _react2.default.createElement(\n\t                    _reactCore.CardBody,\n\t                    null,\n\t                    'This is a card'\n\t                  )\n\t                )\n\t              );\n\t            })\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return PageLayoutSimpleNav;\n\t}(_react2.default.Component);\n\t\n\tPageLayoutSimpleNav.title = 'Using simple navigation';\n\texports.default = PageLayoutSimpleNav;\n\tPageLayoutSimpleNav.__docgenInfo = {\n\t  'description': '',\n\t  'displayName': 'PageLayoutSimpleNav'\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 665:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  NavVariants,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutSimpleNav extends React.Component {\\n  static title = 'Using simple navigation';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0,\\n      isNavOpen\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList variant={NavVariants.simple}>\\n          <NavItem to=\\\"#nav-link1\\\" itemId={0} isActive={activeItem === 0}>\\n            System Panel\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link2\\\" itemId={1} isActive={activeItem === 1}>\\n            Policy\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link3\\\" itemId={2} isActive={activeItem === 2}>\\n            Authentication\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link4\\\" itemId={3} isActive={activeItem === 3}>\\n            Network Services\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link5\\\" itemId={4} isActive={activeItem === 4}>\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        showNavToggle\\n        onNavToggle={this.onNavToggle}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header} sidebar={Sidebar}>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery gutter=\\\"md\\\">\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutSimpleNav;\\n\"\n\n/***/ }),\n\n/***/ 666:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutVerticalNavCondensed extends React.Component {\\n  static title = 'Using vertical navigation with condensed header';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      isNavOpen,\\n      activeGroup: 'grp-1',\\n      activeItem: 'grp-1_itm-1'\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId,\\n      activeGroup: result.groupId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen, activeGroup } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavExpandable title=\\\"System Panel\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n            <NavItem to=\\\"#expandable-1\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-1\\\" isActive={activeItem === 'grp-1_itm-1'}>\\n              Overview\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-2\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'}>\\n              Resource Usage\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-3\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'}>\\n              Hypervisors\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-4\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-4\\\" isActive={activeItem === 'grp-1_itm-4'}>\\n              Instances\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-5\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-5\\\" isActive={activeItem === 'grp-1_itm-5'}>\\n              Volumes\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-6\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-6\\\" isActive={activeItem === 'grp-1_itm-6'}>\\n              Network\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Policy\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'}>\\n            <NavItem to=\\\"#expandable-4\\\" groupId=\\\"grp-2\\\" itemId=\\\"grp-2_itm-1\\\" isActive={activeItem === 'grp-2_itm-1'}>\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-5\\\" groupId=\\\"grp-2\\\" itemId=\\\"grp-2_itm-2\\\" isActive={activeItem === 'grp-2_itm-2'}>\\n              Subnav Link 2\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Authentication\\\" groupId=\\\"grp-3\\\" isActive={activeGroup === 'grp-3'}>\\n            <NavItem to=\\\"#expandable-7\\\" groupId=\\\"grp-3\\\" itemId=\\\"grp-3_itm-1\\\" isActive={activeItem === 'grp-3_itm-1'}>\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-8\\\" groupId=\\\"grp-3\\\" itemId=\\\"grp-3_itm-2\\\" isActive={activeItem === 'grp-3_itm-2'}>\\n              Subnav Link 2\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        showNavToggle\\n        onNavToggle={this.onNavToggle}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header} sidebar={Sidebar} useCondensed>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery gutter=\\\"md\\\">\\n              {Array.apply(0, Array(50)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutVerticalNavCondensed;\\n\"\n\n/***/ }),\n\n/***/ 221:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactCore = __webpack_require__(4);\n\t\n\tvar _reactTokens = __webpack_require__(7);\n\t\n\tvar _accessibility = __webpack_require__(18);\n\t\n\tvar _accessibility2 = _interopRequireDefault(_accessibility);\n\t\n\tvar _spacing = __webpack_require__(17);\n\t\n\tvar _spacing2 = _interopRequireDefault(_spacing);\n\t\n\tvar _reactStyles = __webpack_require__(5);\n\t\n\tvar _reactIcons = __webpack_require__(16);\n\t\n\tvar _l_pfReverse164x = __webpack_require__(9);\n\t\n\tvar _l_pfReverse164x2 = _interopRequireDefault(_l_pfReverse164x);\n\t\n\tvar _img_avatar = __webpack_require__(8);\n\t\n\tvar _img_avatar2 = _interopRequireDefault(_img_avatar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PageLayoutVerticalNavCondensed = function (_React$Component) {\n\t  _inherits(PageLayoutVerticalNavCondensed, _React$Component);\n\t\n\t  function PageLayoutVerticalNavCondensed(props) {\n\t    _classCallCheck(this, PageLayoutVerticalNavCondensed);\n\t\n\t    // Set initial isNavOpen state based on window width\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.onDropdownToggle = function (isDropdownOpen) {\n\t      _this.setState({\n\t        isDropdownOpen: isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isDropdownOpen: !_this.state.isDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownToggle = function (isKebabDropdownOpen) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onKebabDropdownSelect = function (event) {\n\t      _this.setState({\n\t        isKebabDropdownOpen: !_this.state.isKebabDropdownOpen\n\t      });\n\t    };\n\t\n\t    _this.onNavSelect = function (result) {\n\t      _this.setState({\n\t        activeItem: result.itemId,\n\t        activeGroup: result.groupId\n\t      });\n\t    };\n\t\n\t    _this.onNavToggle = function () {\n\t      _this.setState({\n\t        isNavOpen: !_this.state.isNavOpen\n\t      });\n\t    };\n\t\n\t    var isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(_reactTokens.global_breakpoint_md.value, 10);\n\t    _this.state = {\n\t      isDropdownOpen: false,\n\t      isKebabDropdownOpen: false,\n\t      isNavOpen: isNavOpen,\n\t      activeGroup: 'grp-1',\n\t      activeItem: 'grp-1_itm-1'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  PageLayoutVerticalNavCondensed.prototype.render = function render() {\n\t    var _bgImages;\n\t\n\t    var _state = this.state,\n\t        isDropdownOpen = _state.isDropdownOpen,\n\t        isKebabDropdownOpen = _state.isKebabDropdownOpen,\n\t        activeItem = _state.activeItem,\n\t        isNavOpen = _state.isNavOpen,\n\t        activeGroup = _state.activeGroup;\n\t\n\t\n\t    var PageNav = _react2.default.createElement(\n\t      _reactCore.Nav,\n\t      { onSelect: this.onNavSelect, 'aria-label': 'Nav' },\n\t      _react2.default.createElement(\n\t        _reactCore.NavList,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.NavExpandable,\n\t          { title: 'System Panel', groupId: 'grp-1', isActive: activeGroup === 'grp-1', isExpanded: true },\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-1', groupId: 'grp-1', itemId: 'grp-1_itm-1', isActive: activeItem === 'grp-1_itm-1' },\n\t            'Overview'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-2', groupId: 'grp-1', itemId: 'grp-1_itm-2', isActive: activeItem === 'grp-1_itm-2' },\n\t            'Resource Usage'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-3', groupId: 'grp-1', itemId: 'grp-1_itm-3', isActive: activeItem === 'grp-1_itm-3' },\n\t            'Hypervisors'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-4', groupId: 'grp-1', itemId: 'grp-1_itm-4', isActive: activeItem === 'grp-1_itm-4' },\n\t            'Instances'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-5', groupId: 'grp-1', itemId: 'grp-1_itm-5', isActive: activeItem === 'grp-1_itm-5' },\n\t            'Volumes'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-6', groupId: 'grp-1', itemId: 'grp-1_itm-6', isActive: activeItem === 'grp-1_itm-6' },\n\t            'Network'\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavExpandable,\n\t          { title: 'Policy', groupId: 'grp-2', isActive: activeGroup === 'grp-2' },\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-4', groupId: 'grp-2', itemId: 'grp-2_itm-1', isActive: activeItem === 'grp-2_itm-1' },\n\t            'Subnav Link 1'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-5', groupId: 'grp-2', itemId: 'grp-2_itm-2', isActive: activeItem === 'grp-2_itm-2' },\n\t            'Subnav Link 2'\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.NavExpandable,\n\t          { title: 'Authentication', groupId: 'grp-3', isActive: activeGroup === 'grp-3' },\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-7', groupId: 'grp-3', itemId: 'grp-3_itm-1', isActive: activeItem === 'grp-3_itm-1' },\n\t            'Subnav Link 1'\n\t          ),\n\t          _react2.default.createElement(\n\t            _reactCore.NavItem,\n\t            { to: '#expandable-8', groupId: 'grp-3', itemId: 'grp-3_itm-2', isActive: activeItem === 'grp-3_itm-2' },\n\t            'Subnav Link 2'\n\t          )\n\t        )\n\t      )\n\t    );\n\t    var PageToolbar = _react2.default.createElement(\n\t      _reactCore.Toolbar,\n\t      null,\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnLg) },\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.BellIcon, null)\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Button,\n\t            { id: 'nav-toggle', 'aria-label': 'Overflow actions', variant: _reactCore.ButtonVariant.plain },\n\t            _react2.default.createElement(_reactIcons.CogIcon, null)\n\t          )\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactCore.ToolbarGroup,\n\t        null,\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.hiddenOnLg, _spacing2.default.mr_0) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onKebabDropdownSelect,\n\t              toggle: _react2.default.createElement(_reactCore.KebabToggle, { onToggle: this.onKebabDropdownToggle }),\n\t              isOpen: isKebabDropdownOpen\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.BellIcon, null),\n\t              ' Notifications'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              _react2.default.createElement(_reactIcons.CogIcon, null),\n\t              ' Settings'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.ToolbarItem,\n\t          { className: (0, _reactStyles.css)(_accessibility2.default.srOnly, _accessibility2.default.visibleOnMd) },\n\t          _react2.default.createElement(\n\t            _reactCore.Dropdown,\n\t            {\n\t              isPlain: true,\n\t              position: 'right',\n\t              onSelect: this.onDropdownSelect,\n\t              isOpen: isDropdownOpen,\n\t              toggle: _react2.default.createElement(\n\t                _reactCore.DropdownToggle,\n\t                { onToggle: this.onDropdownToggle },\n\t                'Kyle Baker'\n\t              )\n\t            },\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Action'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true },\n\t              'Disabled Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { isDisabled: true, component: 'button' },\n\t              'Disabled Action'\n\t            ),\n\t            _react2.default.createElement(_reactCore.DropdownSeparator, null),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              null,\n\t              'Separated Link'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.DropdownItem,\n\t              { component: 'button' },\n\t              'Separated Action'\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t    var bgImages = (_bgImages = {}, _bgImages[_reactCore.BackgroundImageSrc.lg] = '/assets/images/pfbg_1200.jpg', _bgImages[_reactCore.BackgroundImageSrc.md] = '/assets/images/pfbg_992.jpg', _bgImages[_reactCore.BackgroundImageSrc.md2x] = '/assets/images/pfbg_992@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm] = '/assets/images/pfbg_768.jpg', _bgImages[_reactCore.BackgroundImageSrc.sm2x] = '/assets/images/pfbg_768@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.xl] = '/assets/images/pfbg_2000.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs] = '/assets/images/pfbg_576.jpg', _bgImages[_reactCore.BackgroundImageSrc.xs2x] = '/assets/images/pfbg_576@2x.jpg', _bgImages[_reactCore.BackgroundImageSrc.filter] = '/assets/images/background-filter.svg', _bgImages);\n\t\n\t    var Header = _react2.default.createElement(_reactCore.PageHeader, {\n\t      logo: _react2.default.createElement(_reactCore.Brand, { src: _l_pfReverse164x2.default, alt: 'Patternfly Logo' }),\n\t      toolbar: PageToolbar,\n\t      avatar: _react2.default.createElement(_reactCore.Avatar, { src: _img_avatar2.default, alt: 'Avatar image' }),\n\t      showNavToggle: true,\n\t      onNavToggle: this.onNavToggle\n\t    });\n\t    var Sidebar = _react2.default.createElement(_reactCore.PageSidebar, { nav: PageNav, isNavOpen: isNavOpen });\n\t\n\t    return _react2.default.createElement(\n\t      _react2.default.Fragment,\n\t      null,\n\t      _react2.default.createElement(_reactCore.BackgroundImage, { src: bgImages }),\n\t      _react2.default.createElement(\n\t        _reactCore.Page,\n\t        { header: Header, sidebar: Sidebar, useCondensed: true },\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          { variant: _reactCore.PageSectionVariants.light },\n\t          _react2.default.createElement(\n\t            _reactCore.TextContent,\n\t            null,\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'h1' },\n\t              'Main Title'\n\t            ),\n\t            _react2.default.createElement(\n\t              _reactCore.Text,\n\t              { component: 'p' },\n\t              'Body text should be Overpass Regular at 16px. It should have leading of 24px because ',\n\t              _react2.default.createElement('br', null),\n\t              'of it\\u2019s relative line height of 1.5.'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactCore.PageSection,\n\t          null,\n\t          _react2.default.createElement(\n\t            _reactCore.Gallery,\n\t            { gutter: 'md' },\n\t            Array.apply(0, Array(50)).map(function (x, i) {\n\t              return _react2.default.createElement(\n\t                _reactCore.GalleryItem,\n\t                { key: i },\n\t                _react2.default.createElement(\n\t                  _reactCore.Card,\n\t                  null,\n\t                  _react2.default.createElement(\n\t                    _reactCore.CardBody,\n\t                    null,\n\t                    'This is a card'\n\t                  )\n\t                )\n\t              );\n\t            })\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return PageLayoutVerticalNavCondensed;\n\t}(_react2.default.Component);\n\t\n\tPageLayoutVerticalNavCondensed.title = 'Using vertical navigation with condensed header';\n\texports.default = PageLayoutVerticalNavCondensed;\n\tPageLayoutVerticalNavCondensed.__docgenInfo = {\n\t  'description': '',\n\t  'displayName': 'PageLayoutVerticalNavCondensed'\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 885:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _PageLayoutDemoDocs = __webpack_require__(814);\n\t\n\tvar _PageLayoutDemoDocs2 = _interopRequireDefault(_PageLayoutDemoDocs);\n\t\n\tvar _componentDocs = __webpack_require__(15);\n\t\n\tvar _componentDocs2 = _interopRequireDefault(_componentDocs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar rawExamples = [{ name: 'PageLayoutDefaultNav', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutDefaultNav.js', file: __webpack_require__(660) }, { name: 'PageLayoutExpandableNav', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutExpandableNav.js', file: __webpack_require__(661) }, { name: 'PageLayoutGroupsNav', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutGroupsNav.js', file: __webpack_require__(662) }, { name: 'PageLayoutHorizontalNav', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNav.js', file: __webpack_require__(663) }, { name: 'PageLayoutHorizontalNavCondensed', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNavCondensed.js', file: __webpack_require__(664) }, { name: 'PageLayoutSimpleNav', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutSimpleNav.js', file: __webpack_require__(665) }, { name: 'PageLayoutVerticalNavCondensed', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutVerticalNavCondensed.js', file: __webpack_require__(666) }];\n\tvar images = [{ name: 'pf_logo.svg', file: __webpack_require__(10) }, { name: 'pf_mini_logo_white.svg', file: __webpack_require__(11) }, { name: 'img_avatar.png', file: __webpack_require__(13) }, { name: 'pf_logo.svg', file: __webpack_require__(14) }, { name: 'img_avatar.png', file: __webpack_require__(8) }, { name: 'l_pf-reverse-164x11.png', file: __webpack_require__(9) }, { name: 'pfbg_992.jpg', file: __webpack_require__(12) }];\n\t\n\texports.default = function () {\n\t    return _react2.default.createElement(_componentDocs2.default, _extends({ rawExamples: rawExamples, images: images }, _PageLayoutDemoDocs2.default));\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---tmp-page-layout-demo-docs-js-b1791d08a639f612a337.js","import PageLayoutDefaultNav from './examples/PageLayoutDefaultNav';\nimport PageLayoutExpandableNav from './examples/PageLayoutExpandableNav';\nimport PageLayoutGroupsNav from './examples/PageLayoutGroupsNav';\nimport PageLayoutHorizontalNav from './examples/PageLayoutHorizontalNav';\nimport PageLayoutSimpleNav from './examples/PageLayoutSimpleNav';\nimport PageLayoutVerticalNavCondensed from './examples/PageLayoutVerticalNavCondensed';\nimport PageLayoutHorizontalNavCondensed from './examples/PageLayoutHorizontalNavCondensed';\n\nexport default {\n  title: 'Page Layout Demos',\n  examples: [\n    PageLayoutDefaultNav,\n    PageLayoutExpandableNav,\n    PageLayoutGroupsNav,\n    PageLayoutHorizontalNav,\n    PageLayoutSimpleNav,\n    PageLayoutVerticalNavCondensed,\n    PageLayoutHorizontalNavCondensed\n  ],\n  fullPageOnly: true\n};\n\n\n\n// WEBPACK FOOTER //\n// ../react-core/src/demos/PageLayout/PageLayoutDemo.docs.js","import React from 'react';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport brandImg from './l_pf-reverse-164x11.png';\nimport avatarImg from './img_avatar.png';\n\nclass PageLayoutDefaultNav extends React.Component {\n  static title = 'Using default navigation';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 0,\n      isNavOpen\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList>\n          <NavItem to=\"#nav-link1\" itemId={0} isActive={activeItem === 0}>\n            System Panel\n          </NavItem>\n          <NavItem to=\"#nav-link2\" itemId={1} isActive={activeItem === 1}>\n            Policy\n          </NavItem>\n          <NavItem to=\"#nav-link3\" itemId={2} isActive={activeItem === 2}>\n            Authentication\n          </NavItem>\n          <NavItem to=\"#nav-link4\" itemId={3} isActive={activeItem === 3}>\n            Network Services\n          </NavItem>\n          <NavItem to=\"#nav-link5\" itemId={4} isActive={activeItem === 4}>\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component=\"button\">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component=\"button\">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component=\"button\">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt=\"Avatar image\" />}\n        showNavToggle\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} sidebar={Sidebar}>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutDefaultNav;\n\n\n\n// WEBPACK FOOTER //\n// ../react-core/src/demos/PageLayout/examples/PageLayoutDefaultNav.js","module.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutDefaultNav extends React.Component {\\n  static title = 'Using default navigation';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0,\\n      isNavOpen\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavItem to=\\\"#nav-link1\\\" itemId={0} isActive={activeItem === 0}>\\n            System Panel\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link2\\\" itemId={1} isActive={activeItem === 1}>\\n            Policy\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link3\\\" itemId={2} isActive={activeItem === 2}>\\n            Authentication\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link4\\\" itemId={3} isActive={activeItem === 3}>\\n            Network Services\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link5\\\" itemId={4} isActive={activeItem === 4}>\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        showNavToggle\\n        onNavToggle={this.onNavToggle}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header} sidebar={Sidebar}>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery gutter=\\\"md\\\">\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutDefaultNav;\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/patternfly/patternfly-react/~/raw-loader!../react-core/src/demos/PageLayout/examples/PageLayoutDefaultNav.js\n// module id = 660\n// module chunks = 198770396674647","import React from 'react';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport brandImg from './l_pf-reverse-164x11.png';\nimport avatarImg from './img_avatar.png';\n\nclass PageLayoutExpandableNav extends React.Component {\n  static title = 'Using expandable navigation';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      isNavOpen,\n      activeGroup: 'grp-1',\n      activeItem: 'grp-1_itm-1'\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId,\n      activeGroup: result.groupId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen, activeGroup } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList>\n          <NavExpandable title=\"System Panel\" groupId=\"grp-1\" isActive={activeGroup === 'grp-1'} isExpanded>\n            <NavItem to=\"#expandable-1\" groupId=\"grp-1\" itemId=\"grp-1_itm-1\" isActive={activeItem === 'grp-1_itm-1'}>\n              Overview\n            </NavItem>\n            <NavItem to=\"#expandable-2\" groupId=\"grp-1\" itemId=\"grp-1_itm-2\" isActive={activeItem === 'grp-1_itm-2'}>\n              Resource Usage\n            </NavItem>\n            <NavItem to=\"#expandable-3\" groupId=\"grp-1\" itemId=\"grp-1_itm-3\" isActive={activeItem === 'grp-1_itm-3'}>\n              Hypervisors\n            </NavItem>\n            <NavItem to=\"#expandable-4\" groupId=\"grp-1\" itemId=\"grp-1_itm-4\" isActive={activeItem === 'grp-1_itm-4'}>\n              Instances\n            </NavItem>\n            <NavItem to=\"#expandable-5\" groupId=\"grp-1\" itemId=\"grp-1_itm-5\" isActive={activeItem === 'grp-1_itm-5'}>\n              Volumes\n            </NavItem>\n            <NavItem to=\"#expandable-6\" groupId=\"grp-1\" itemId=\"grp-1_itm-6\" isActive={activeItem === 'grp-1_itm-6'}>\n              Network\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title=\"Policy\" groupId=\"grp-2\" isActive={activeGroup === 'grp-2'}>\n            <NavItem to=\"#expandable-4\" groupId=\"grp-2\" itemId=\"grp-2_itm-1\" isActive={activeItem === 'grp-2_itm-1'}>\n              Subnav Link 1\n            </NavItem>\n            <NavItem to=\"#expandable-5\" groupId=\"grp-2\" itemId=\"grp-2_itm-2\" isActive={activeItem === 'grp-2_itm-2'}>\n              Subnav Link 2\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title=\"Authentication\" groupId=\"grp-3\" isActive={activeGroup === 'grp-3'}>\n            <NavItem to=\"#expandable-7\" groupId=\"grp-3\" itemId=\"grp-3_itm-1\" isActive={activeItem === 'grp-3_itm-1'}>\n              Subnav Link 1\n            </NavItem>\n            <NavItem to=\"#expandable-8\" groupId=\"grp-3\" itemId=\"grp-3_itm-2\" isActive={activeItem === 'grp-3_itm-2'}>\n              Subnav Link 2\n            </NavItem>\n          </NavExpandable>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component=\"button\">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component=\"button\">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component=\"button\">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt=\"Avatar image\" />}\n        showNavToggle\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} sidebar={Sidebar}>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutExpandableNav;\n\n\n\n// WEBPACK FOOTER //\n// ../react-core/src/demos/PageLayout/examples/PageLayoutExpandableNav.js","module.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutExpandableNav extends React.Component {\\n  static title = 'Using expandable navigation';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      isNavOpen,\\n      activeGroup: 'grp-1',\\n      activeItem: 'grp-1_itm-1'\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId,\\n      activeGroup: result.groupId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen, activeGroup } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavExpandable title=\\\"System Panel\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n            <NavItem to=\\\"#expandable-1\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-1\\\" isActive={activeItem === 'grp-1_itm-1'}>\\n              Overview\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-2\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'}>\\n              Resource Usage\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-3\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'}>\\n              Hypervisors\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-4\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-4\\\" isActive={activeItem === 'grp-1_itm-4'}>\\n              Instances\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-5\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-5\\\" isActive={activeItem === 'grp-1_itm-5'}>\\n              Volumes\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-6\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-6\\\" isActive={activeItem === 'grp-1_itm-6'}>\\n              Network\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Policy\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'}>\\n            <NavItem to=\\\"#expandable-4\\\" groupId=\\\"grp-2\\\" itemId=\\\"grp-2_itm-1\\\" isActive={activeItem === 'grp-2_itm-1'}>\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-5\\\" groupId=\\\"grp-2\\\" itemId=\\\"grp-2_itm-2\\\" isActive={activeItem === 'grp-2_itm-2'}>\\n              Subnav Link 2\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Authentication\\\" groupId=\\\"grp-3\\\" isActive={activeGroup === 'grp-3'}>\\n            <NavItem to=\\\"#expandable-7\\\" groupId=\\\"grp-3\\\" itemId=\\\"grp-3_itm-1\\\" isActive={activeItem === 'grp-3_itm-1'}>\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-8\\\" groupId=\\\"grp-3\\\" itemId=\\\"grp-3_itm-2\\\" isActive={activeItem === 'grp-3_itm-2'}>\\n              Subnav Link 2\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        showNavToggle\\n        onNavToggle={this.onNavToggle}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header} sidebar={Sidebar}>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery gutter=\\\"md\\\">\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutExpandableNav;\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/patternfly/patternfly-react/~/raw-loader!../react-core/src/demos/PageLayout/examples/PageLayoutExpandableNav.js\n// module id = 661\n// module chunks = 198770396674647","module.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  KebabToggle,\\n  Nav,\\n  NavGroup,\\n  NavItem,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutGroupsNav extends React.Component {\\n  static title = 'Using grouped navigation';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 'grp-1_itm-1',\\n      isNavOpen\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavGroup title=\\\"System Panel\\\">\\n          <NavItem to=\\\"#grouped-1\\\" itemId=\\\"grp-1_itm-1\\\" isActive={activeItem === 'grp-1_itm-1'}>\\n            Overview\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-2\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'}>\\n            Resource Usage\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-3\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'}>\\n            Hypervisors\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-4\\\" itemId=\\\"grp-1_itm-4\\\" isActive={activeItem === 'grp-1_itm-4'}>\\n            Instances\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-5\\\" itemId=\\\"grp-1_itm-5\\\" isActive={activeItem === 'grp-1_itm-5'}>\\n            Volumes\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-6\\\" itemId=\\\"grp-1_itm-6\\\" isActive={activeItem === 'grp-1_itm-6'}>\\n            Network\\n          </NavItem>\\n        </NavGroup>\\n        <NavGroup title=\\\"Policy\\\">\\n          <NavItem to=\\\"#grouped-7\\\" itemId=\\\"grp-2_itm-1\\\" isActive={activeItem === 'grp-2_itm-1'}>\\n            Hosts\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-8\\\" itemId=\\\"grp-2_itm-2\\\" isActive={activeItem === 'grp-2_itm-2'}>\\n            Virtual Machines\\n          </NavItem>\\n          <NavItem to=\\\"#grouped-9\\\" itemId=\\\"grp-2_itm-3\\\" isActive={activeItem === 'grp-2_itm-3'}>\\n            Storage\\n          </NavItem>\\n        </NavGroup>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        showNavToggle\\n        onNavToggle={this.onNavToggle}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header} sidebar={Sidebar}>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection variant={PageSectionVariants.light}>Light</PageSection>\\n          <PageSection variant={PageSectionVariants.dark}>Dark</PageSection>\\n          <PageSection variant={PageSectionVariants.darker}>Darker</PageSection>\\n          <PageSection>Content</PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutGroupsNav;\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/patternfly/patternfly-react/~/raw-loader!../react-core/src/demos/PageLayout/examples/PageLayoutGroupsNav.js\n// module id = 662\n// module chunks = 198770396674647","import React from 'react';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  KebabToggle,\n  Nav,\n  NavGroup,\n  NavItem,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport brandImg from './l_pf-reverse-164x11.png';\nimport avatarImg from './img_avatar.png';\n\nclass PageLayoutGroupsNav extends React.Component {\n  static title = 'Using grouped navigation';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 'grp-1_itm-1',\n      isNavOpen\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavGroup title=\"System Panel\">\n          <NavItem to=\"#grouped-1\" itemId=\"grp-1_itm-1\" isActive={activeItem === 'grp-1_itm-1'}>\n            Overview\n          </NavItem>\n          <NavItem to=\"#grouped-2\" itemId=\"grp-1_itm-2\" isActive={activeItem === 'grp-1_itm-2'}>\n            Resource Usage\n          </NavItem>\n          <NavItem to=\"#grouped-3\" itemId=\"grp-1_itm-3\" isActive={activeItem === 'grp-1_itm-3'}>\n            Hypervisors\n          </NavItem>\n          <NavItem to=\"#grouped-4\" itemId=\"grp-1_itm-4\" isActive={activeItem === 'grp-1_itm-4'}>\n            Instances\n          </NavItem>\n          <NavItem to=\"#grouped-5\" itemId=\"grp-1_itm-5\" isActive={activeItem === 'grp-1_itm-5'}>\n            Volumes\n          </NavItem>\n          <NavItem to=\"#grouped-6\" itemId=\"grp-1_itm-6\" isActive={activeItem === 'grp-1_itm-6'}>\n            Network\n          </NavItem>\n        </NavGroup>\n        <NavGroup title=\"Policy\">\n          <NavItem to=\"#grouped-7\" itemId=\"grp-2_itm-1\" isActive={activeItem === 'grp-2_itm-1'}>\n            Hosts\n          </NavItem>\n          <NavItem to=\"#grouped-8\" itemId=\"grp-2_itm-2\" isActive={activeItem === 'grp-2_itm-2'}>\n            Virtual Machines\n          </NavItem>\n          <NavItem to=\"#grouped-9\" itemId=\"grp-2_itm-3\" isActive={activeItem === 'grp-2_itm-3'}>\n            Storage\n          </NavItem>\n        </NavGroup>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component=\"button\">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component=\"button\">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component=\"button\">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt=\"Avatar image\" />}\n        showNavToggle\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} sidebar={Sidebar}>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection variant={PageSectionVariants.light}>Light</PageSection>\n          <PageSection variant={PageSectionVariants.dark}>Dark</PageSection>\n          <PageSection variant={PageSectionVariants.darker}>Darker</PageSection>\n          <PageSection>Content</PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutGroupsNav;\n\n\n\n// WEBPACK FOOTER //\n// ../react-core/src/demos/PageLayout/examples/PageLayoutGroupsNav.js","module.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  NavVariants,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutHorizontalNav extends React.Component {\\n  static title = 'Using horizontal navigation';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0,\\n      isNavOpen\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList variant={NavVariants.horizontal}>\\n          <NavItem to=\\\"#nav-link1\\\" itemId={0} isActive={activeItem === 0}>\\n            System Panel\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link2\\\" itemId={1} isActive={activeItem === 1}>\\n            Policy\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link3\\\" itemId={2} isActive={activeItem === 2}>\\n            Authentication\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link4\\\" itemId={3} isActive={activeItem === 3}>\\n            Network Services\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link5\\\" itemId={4} isActive={activeItem === 4}>\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        topNav={PageNav}\\n      />\\n    );\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header}>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery gutter=\\\"md\\\">\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutHorizontalNav;\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/patternfly/patternfly-react/~/raw-loader!../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNav.js\n// module id = 663\n// module chunks = 198770396674647","import React from 'react';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  NavVariants,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport brandImg from './l_pf-reverse-164x11.png';\nimport avatarImg from './img_avatar.png';\n\nclass PageLayoutHorizontalNav extends React.Component {\n  static title = 'Using horizontal navigation';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 0,\n      isNavOpen\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList variant={NavVariants.horizontal}>\n          <NavItem to=\"#nav-link1\" itemId={0} isActive={activeItem === 0}>\n            System Panel\n          </NavItem>\n          <NavItem to=\"#nav-link2\" itemId={1} isActive={activeItem === 1}>\n            Policy\n          </NavItem>\n          <NavItem to=\"#nav-link3\" itemId={2} isActive={activeItem === 2}>\n            Authentication\n          </NavItem>\n          <NavItem to=\"#nav-link4\" itemId={3} isActive={activeItem === 3}>\n            Network Services\n          </NavItem>\n          <NavItem to=\"#nav-link5\" itemId={4} isActive={activeItem === 4}>\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component=\"button\">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component=\"button\">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component=\"button\">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt=\"Avatar image\" />}\n        topNav={PageNav}\n      />\n    );\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header}>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutHorizontalNav;\n\n\n\n// WEBPACK FOOTER //\n// ../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNav.js","import React from 'react';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  NavVariants,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport brandImg from './l_pf-reverse-164x11.png';\nimport avatarImg from './img_avatar.png';\n\nclass PageLayoutHorizontalNavCondensed extends React.Component {\n  static title = 'Using horizontal navigation with condensed header';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 0,\n      isNavOpen\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList variant={NavVariants.horizontal}>\n          <NavItem to=\"#nav-link1\" itemId={0} isActive={activeItem === 0}>\n            System Panel\n          </NavItem>\n          <NavItem to=\"#nav-link2\" itemId={1} isActive={activeItem === 1}>\n            Policy\n          </NavItem>\n          <NavItem to=\"#nav-link3\" itemId={2} isActive={activeItem === 2}>\n            Authentication\n          </NavItem>\n          <NavItem to=\"#nav-link4\" itemId={3} isActive={activeItem === 3}>\n            Network Services\n          </NavItem>\n          <NavItem to=\"#nav-link5\" itemId={4} isActive={activeItem === 4}>\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component=\"button\">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component=\"button\">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component=\"button\">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt=\"Avatar image\" />}\n        topNav={PageNav}\n      />\n    );\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} useCondensed>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(50)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutHorizontalNavCondensed;\n\n\n\n// WEBPACK FOOTER //\n// ../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNavCondensed.js","module.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  NavVariants,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutHorizontalNavCondensed extends React.Component {\\n  static title = 'Using horizontal navigation with condensed header';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0,\\n      isNavOpen\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList variant={NavVariants.horizontal}>\\n          <NavItem to=\\\"#nav-link1\\\" itemId={0} isActive={activeItem === 0}>\\n            System Panel\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link2\\\" itemId={1} isActive={activeItem === 1}>\\n            Policy\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link3\\\" itemId={2} isActive={activeItem === 2}>\\n            Authentication\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link4\\\" itemId={3} isActive={activeItem === 3}>\\n            Network Services\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link5\\\" itemId={4} isActive={activeItem === 4}>\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        topNav={PageNav}\\n      />\\n    );\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header} useCondensed>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery gutter=\\\"md\\\">\\n              {Array.apply(0, Array(50)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutHorizontalNavCondensed;\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/patternfly/patternfly-react/~/raw-loader!../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNavCondensed.js\n// module id = 664\n// module chunks = 198770396674647","import React from 'react';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  NavVariants,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport brandImg from './l_pf-reverse-164x11.png';\nimport avatarImg from './img_avatar.png';\n\nclass PageLayoutSimpleNav extends React.Component {\n  static title = 'Using simple navigation';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 0,\n      isNavOpen\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList variant={NavVariants.simple}>\n          <NavItem to=\"#nav-link1\" itemId={0} isActive={activeItem === 0}>\n            System Panel\n          </NavItem>\n          <NavItem to=\"#nav-link2\" itemId={1} isActive={activeItem === 1}>\n            Policy\n          </NavItem>\n          <NavItem to=\"#nav-link3\" itemId={2} isActive={activeItem === 2}>\n            Authentication\n          </NavItem>\n          <NavItem to=\"#nav-link4\" itemId={3} isActive={activeItem === 3}>\n            Network Services\n          </NavItem>\n          <NavItem to=\"#nav-link5\" itemId={4} isActive={activeItem === 4}>\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component=\"button\">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component=\"button\">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component=\"button\">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt=\"Avatar image\" />}\n        showNavToggle\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} sidebar={Sidebar}>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutSimpleNav;\n\n\n\n// WEBPACK FOOTER //\n// ../react-core/src/demos/PageLayout/examples/PageLayoutSimpleNav.js","module.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  NavVariants,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutSimpleNav extends React.Component {\\n  static title = 'Using simple navigation';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0,\\n      isNavOpen\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList variant={NavVariants.simple}>\\n          <NavItem to=\\\"#nav-link1\\\" itemId={0} isActive={activeItem === 0}>\\n            System Panel\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link2\\\" itemId={1} isActive={activeItem === 1}>\\n            Policy\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link3\\\" itemId={2} isActive={activeItem === 2}>\\n            Authentication\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link4\\\" itemId={3} isActive={activeItem === 3}>\\n            Network Services\\n          </NavItem>\\n          <NavItem to=\\\"#nav-link5\\\" itemId={4} isActive={activeItem === 4}>\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        showNavToggle\\n        onNavToggle={this.onNavToggle}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header} sidebar={Sidebar}>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery gutter=\\\"md\\\">\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutSimpleNav;\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/patternfly/patternfly-react/~/raw-loader!../react-core/src/demos/PageLayout/examples/PageLayoutSimpleNav.js\n// module id = 665\n// module chunks = 198770396674647","module.exports = \"import React from 'react';\\nimport {\\n  Avatar,\\n  BackgroundImage,\\n  BackgroundImageSrc,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem,\\n  DropdownSeparator,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  TextContent,\\n  Text,\\n  Toolbar,\\n  ToolbarGroup,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\\nimport { css } from '@patternfly/react-styles';\\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\\nimport brandImg from './l_pf-reverse-164x11.png';\\nimport avatarImg from './img_avatar.png';\\n\\nclass PageLayoutVerticalNavCondensed extends React.Component {\\n  static title = 'Using vertical navigation with condensed header';\\n\\n  constructor(props) {\\n    super(props);\\n    // Set initial isNavOpen state based on window width\\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      isNavOpen,\\n      activeGroup: 'grp-1',\\n      activeItem: 'grp-1_itm-1'\\n    };\\n  }\\n\\n  onDropdownToggle = isDropdownOpen => {\\n    this.setState({\\n      isDropdownOpen\\n    });\\n  };\\n\\n  onDropdownSelect = event => {\\n    this.setState({\\n      isDropdownOpen: !this.state.isDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownToggle = isKebabDropdownOpen => {\\n    this.setState({\\n      isKebabDropdownOpen\\n    });\\n  };\\n\\n  onKebabDropdownSelect = event => {\\n    this.setState({\\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n    });\\n  };\\n\\n  onNavSelect = result => {\\n    this.setState({\\n      activeItem: result.itemId,\\n      activeGroup: result.groupId\\n    });\\n  };\\n\\n  onNavToggle = () => {\\n    this.setState({\\n      isNavOpen: !this.state.isNavOpen\\n    });\\n  };\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen, activeGroup } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavExpandable title=\\\"System Panel\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n            <NavItem to=\\\"#expandable-1\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-1\\\" isActive={activeItem === 'grp-1_itm-1'}>\\n              Overview\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-2\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'}>\\n              Resource Usage\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-3\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'}>\\n              Hypervisors\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-4\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-4\\\" isActive={activeItem === 'grp-1_itm-4'}>\\n              Instances\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-5\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-5\\\" isActive={activeItem === 'grp-1_itm-5'}>\\n              Volumes\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-6\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-6\\\" isActive={activeItem === 'grp-1_itm-6'}>\\n              Network\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Policy\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'}>\\n            <NavItem to=\\\"#expandable-4\\\" groupId=\\\"grp-2\\\" itemId=\\\"grp-2_itm-1\\\" isActive={activeItem === 'grp-2_itm-1'}>\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-5\\\" groupId=\\\"grp-2\\\" itemId=\\\"grp-2_itm-2\\\" isActive={activeItem === 'grp-2_itm-2'}>\\n              Subnav Link 2\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Authentication\\\" groupId=\\\"grp-3\\\" isActive={activeGroup === 'grp-3'}>\\n            <NavItem to=\\\"#expandable-7\\\" groupId=\\\"grp-3\\\" itemId=\\\"grp-3_itm-1\\\" isActive={activeItem === 'grp-3_itm-1'}>\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-8\\\" groupId=\\\"grp-3\\\" itemId=\\\"grp-3_itm-2\\\" isActive={activeItem === 'grp-3_itm-2'}>\\n              Subnav Link 2\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n    const PageToolbar = (\\n      <Toolbar>\\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <BellIcon />\\n            </Button>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Button id=\\\"nav-toggle\\\" aria-label=\\\"Overflow actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarGroup>\\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n            >\\n              <DropdownItem>\\n                <BellIcon /> Notifications\\n              </DropdownItem>\\n              <DropdownItem>\\n                <CogIcon /> Settings\\n              </DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\\n            >\\n              <DropdownItem>Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Action</DropdownItem>\\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\\n              <DropdownItem isDisabled component=\\\"button\\\">\\n                Disabled Action\\n              </DropdownItem>\\n              <DropdownSeparator />\\n              <DropdownItem>Separated Link</DropdownItem>\\n              <DropdownItem component=\\\"button\\\">Separated Action</DropdownItem>\\n            </Dropdown>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n      </Toolbar>\\n    );\\n    const bgImages = {\\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\\n    };\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={brandImg} alt=\\\"Patternfly Logo\\\" />}\\n        toolbar={PageToolbar}\\n        avatar={<Avatar src={avatarImg} alt=\\\"Avatar image\\\" />}\\n        showNavToggle\\n        onNavToggle={this.onNavToggle}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <React.Fragment>\\n        <BackgroundImage src={bgImages} />\\n        <Page header={Header} sidebar={Sidebar} useCondensed>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main Title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery gutter=\\\"md\\\">\\n              {Array.apply(0, Array(50)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nexport default PageLayoutVerticalNavCondensed;\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/patternfly/patternfly-react/~/raw-loader!../react-core/src/demos/PageLayout/examples/PageLayoutVerticalNavCondensed.js\n// module id = 666\n// module chunks = 198770396674647","import React from 'react';\nimport {\n  Avatar,\n  BackgroundImage,\n  BackgroundImageSrc,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { global_breakpoint_md as breakpointMd } from '@patternfly/react-tokens';\nimport accessibleStyles from '@patternfly/patternfly-next/utilities/Accessibility/accessibility.css';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport brandImg from './l_pf-reverse-164x11.png';\nimport avatarImg from './img_avatar.png';\n\nclass PageLayoutVerticalNavCondensed extends React.Component {\n  static title = 'Using vertical navigation with condensed header';\n\n  constructor(props) {\n    super(props);\n    // Set initial isNavOpen state based on window width\n    const isNavOpen = typeof window !== 'undefined' && window.innerWidth >= parseInt(breakpointMd.value, 10);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      isNavOpen,\n      activeGroup: 'grp-1',\n      activeItem: 'grp-1_itm-1'\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  };\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  };\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId,\n      activeGroup: result.groupId\n    });\n  };\n\n  onNavToggle = () => {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  };\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, isNavOpen, activeGroup } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList>\n          <NavExpandable title=\"System Panel\" groupId=\"grp-1\" isActive={activeGroup === 'grp-1'} isExpanded>\n            <NavItem to=\"#expandable-1\" groupId=\"grp-1\" itemId=\"grp-1_itm-1\" isActive={activeItem === 'grp-1_itm-1'}>\n              Overview\n            </NavItem>\n            <NavItem to=\"#expandable-2\" groupId=\"grp-1\" itemId=\"grp-1_itm-2\" isActive={activeItem === 'grp-1_itm-2'}>\n              Resource Usage\n            </NavItem>\n            <NavItem to=\"#expandable-3\" groupId=\"grp-1\" itemId=\"grp-1_itm-3\" isActive={activeItem === 'grp-1_itm-3'}>\n              Hypervisors\n            </NavItem>\n            <NavItem to=\"#expandable-4\" groupId=\"grp-1\" itemId=\"grp-1_itm-4\" isActive={activeItem === 'grp-1_itm-4'}>\n              Instances\n            </NavItem>\n            <NavItem to=\"#expandable-5\" groupId=\"grp-1\" itemId=\"grp-1_itm-5\" isActive={activeItem === 'grp-1_itm-5'}>\n              Volumes\n            </NavItem>\n            <NavItem to=\"#expandable-6\" groupId=\"grp-1\" itemId=\"grp-1_itm-6\" isActive={activeItem === 'grp-1_itm-6'}>\n              Network\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title=\"Policy\" groupId=\"grp-2\" isActive={activeGroup === 'grp-2'}>\n            <NavItem to=\"#expandable-4\" groupId=\"grp-2\" itemId=\"grp-2_itm-1\" isActive={activeItem === 'grp-2_itm-1'}>\n              Subnav Link 1\n            </NavItem>\n            <NavItem to=\"#expandable-5\" groupId=\"grp-2\" itemId=\"grp-2_itm-2\" isActive={activeItem === 'grp-2_itm-2'}>\n              Subnav Link 2\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title=\"Authentication\" groupId=\"grp-3\" isActive={activeGroup === 'grp-3'}>\n            <NavItem to=\"#expandable-7\" groupId=\"grp-3\" itemId=\"grp-3_itm-1\" isActive={activeItem === 'grp-3_itm-1'}>\n              Subnav Link 1\n            </NavItem>\n            <NavItem to=\"#expandable-8\" groupId=\"grp-3\" itemId=\"grp-3_itm-2\" isActive={activeItem === 'grp-3_itm-2'}>\n              Subnav Link 2\n            </NavItem>\n          </NavExpandable>\n        </NavList>\n      </Nav>\n    );\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"nav-toggle\" aria-label=\"Overflow actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n            >\n              <DropdownItem>\n                <BellIcon /> Notifications\n              </DropdownItem>\n              <DropdownItem>\n                <CogIcon /> Settings\n              </DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.srOnly, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n            >\n              <DropdownItem>Link</DropdownItem>\n              <DropdownItem component=\"button\">Action</DropdownItem>\n              <DropdownItem isDisabled>Disabled Link</DropdownItem>\n              <DropdownItem isDisabled component=\"button\">\n                Disabled Action\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>Separated Link</DropdownItem>\n              <DropdownItem component=\"button\">Separated Action</DropdownItem>\n            </Dropdown>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n    const bgImages = {\n      [BackgroundImageSrc.lg]: '/assets/images/pfbg_1200.jpg',\n      [BackgroundImageSrc.md]: '/assets/images/pfbg_992.jpg',\n      [BackgroundImageSrc.md2x]: '/assets/images/pfbg_992@2x.jpg',\n      [BackgroundImageSrc.sm]: '/assets/images/pfbg_768.jpg',\n      [BackgroundImageSrc.sm2x]: '/assets/images/pfbg_768@2x.jpg',\n      [BackgroundImageSrc.xl]: '/assets/images/pfbg_2000.jpg',\n      [BackgroundImageSrc.xs]: '/assets/images/pfbg_576.jpg',\n      [BackgroundImageSrc.xs2x]: '/assets/images/pfbg_576@2x.jpg',\n      [BackgroundImageSrc.filter]: '/assets/images/background-filter.svg'\n    };\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={brandImg} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={avatarImg} alt=\"Avatar image\" />}\n        showNavToggle\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isNavOpen} />;\n\n    return (\n      <React.Fragment>\n        <BackgroundImage src={bgImages} />\n        <Page header={Header} sidebar={Sidebar} useCondensed>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(50)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutVerticalNavCondensed;\n\n\n\n// WEBPACK FOOTER //\n// ../react-core/src/demos/PageLayout/examples/PageLayoutVerticalNavCondensed.js","\n    import React from 'react';\n    import docs from '/home/travis/build/patternfly/patternfly-react/packages/patternfly-4/react-core/src/demos/PageLayout/PageLayoutDemo.docs.js';\n    import ComponentDocs from '/home/travis/build/patternfly/patternfly-react/packages/patternfly-4/react-docs/src/components/componentDocs';\n    \n    const rawExamples = [{name: 'PageLayoutDefaultNav', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutDefaultNav.js', file: require('!!raw!../../react-core/src/demos/PageLayout/examples/PageLayoutDefaultNav.js')},{name: 'PageLayoutExpandableNav', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutExpandableNav.js', file: require('!!raw!../../react-core/src/demos/PageLayout/examples/PageLayoutExpandableNav.js')},{name: 'PageLayoutGroupsNav', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutGroupsNav.js', file: require('!!raw!../../react-core/src/demos/PageLayout/examples/PageLayoutGroupsNav.js')},{name: 'PageLayoutHorizontalNav', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNav.js', file: require('!!raw!../../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNav.js')},{name: 'PageLayoutHorizontalNavCondensed', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNavCondensed.js', file: require('!!raw!../../react-core/src/demos/PageLayout/examples/PageLayoutHorizontalNavCondensed.js')},{name: 'PageLayoutSimpleNav', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutSimpleNav.js', file: require('!!raw!../../react-core/src/demos/PageLayout/examples/PageLayoutSimpleNav.js')},{name: 'PageLayoutVerticalNavCondensed', path: '../../react-core/src/demos/PageLayout/examples/PageLayoutVerticalNavCondensed.js', file: require('!!raw!../../react-core/src/demos/PageLayout/examples/PageLayoutVerticalNavCondensed.js')}];\n    const images = [{name: 'pf_logo.svg', file: require('../../react-core/src/components/AboutModal/examples/pf_logo.svg')},{name: 'pf_mini_logo_white.svg', file: require('../../react-core/src/components/AboutModal/examples/pf_mini_logo_white.svg')},{name: 'img_avatar.png', file: require('../../react-core/src/components/Avatar/examples/img_avatar.png')},{name: 'pf_logo.svg', file: require('../../react-core/src/components/Brand/examples/pf_logo.svg')},{name: 'img_avatar.png', file: require('../../react-core/src/demos/PageLayout/examples/img_avatar.png')},{name: 'l_pf-reverse-164x11.png', file: require('../../react-core/src/demos/PageLayout/examples/l_pf-reverse-164x11.png')},{name: 'pfbg_992.jpg', file: require('../../react-core/src/components/AboutModal/examples/pfbg_992.jpg')}];\n\n    export default () => <ComponentDocs rawExamples={rawExamples} images={images} {...docs} />\n    \n\n\n// WEBPACK FOOTER //\n// ./.tmp/PageLayoutDemo.docs.js"],"sourceRoot":""}